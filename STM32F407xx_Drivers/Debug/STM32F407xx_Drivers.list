
STM32F407xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000204  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003ac  080003b4  000103b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003ac  080003ac  000103b4  2**0
                  CONTENTS
  4 .ARM          00000000  080003ac  080003ac  000103b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003ac  080003b4  000103b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003ac  080003ac  000103ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003b0  080003b0  000103b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003b4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003b4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000103b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000bee  00000000  00000000  000103e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001c5  00000000  00000000  00010fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000060  00000000  00000000  00011198  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000048  00000000  00000000  000111f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002234  00000000  00000000  00011240  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000681  00000000  00000000  00013474  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000a1d4  00000000  00000000  00013af5  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001dcc9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000f8  00000000  00000000  0001dd44  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000394 	.word	0x08000394

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000394 	.word	0x08000394

080001e8 <main>:
#include "../drivers/Inc/stm32f407xx.h"

void GPIO_ButtonInit(GPIO_Handle_t* GPIO_Button);
void GPIO_I2CInit(GPIO_Handle_t* I2C_GPIO);
void I2C_HandlerInit(I2C_Handle_t* I2C_Handler);
int main() {
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b090      	sub	sp, #64	; 0x40
 80001ec:	af00      	add	r7, sp, #0

	//Define the handle structures
	GPIO_Handle_t GPIO_Button, I2C_GPIO;
	I2C_Handle_t  I2C_Handler;
	memset(&GPIO_Button, 0, sizeof(GPIO_Button));
 80001ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80001f2:	221c      	movs	r2, #28
 80001f4:	2100      	movs	r1, #0
 80001f6:	4618      	mov	r0, r3
 80001f8:	f000 f8c4 	bl	8000384 <memset>
	memset(&I2C_GPIO, 0, sizeof(GPIO_Button));
 80001fc:	f107 0308 	add.w	r3, r7, #8
 8000200:	221c      	movs	r2, #28
 8000202:	2100      	movs	r1, #0
 8000204:	4618      	mov	r0, r3
 8000206:	f000 f8bd 	bl	8000384 <memset>
	memset(&I2C_Handler, 0, sizeof(GPIO_Button));
 800020a:	463b      	mov	r3, r7
 800020c:	221c      	movs	r2, #28
 800020e:	2100      	movs	r1, #0
 8000210:	4618      	mov	r0, r3
 8000212:	f000 f8b7 	bl	8000384 <memset>

	GPIO_ButtonInit(&GPIO_Button);
 8000216:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800021a:	4618      	mov	r0, r3
 800021c:	f000 f80e 	bl	800023c <GPIO_ButtonInit>
	GPIO_I2CInit(&I2C_GPIO);
 8000220:	f107 0308 	add.w	r3, r7, #8
 8000224:	4618      	mov	r0, r3
 8000226:	f000 f825 	bl	8000274 <GPIO_I2CInit>
	I2C_HandlerInit(&I2C_Handler);
 800022a:	463b      	mov	r3, r7
 800022c:	4618      	mov	r0, r3
 800022e:	f000 f843 	bl	80002b8 <I2C_HandlerInit>

	return EXIT_SUCCESS;
 8000232:	2300      	movs	r3, #0
}
 8000234:	4618      	mov	r0, r3
 8000236:	3740      	adds	r7, #64	; 0x40
 8000238:	46bd      	mov	sp, r7
 800023a:	bd80      	pop	{r7, pc}

0800023c <GPIO_ButtonInit>:

void GPIO_ButtonInit(GPIO_Handle_t* GPIO_Button) {
 800023c:	b480      	push	{r7}
 800023e:	b083      	sub	sp, #12
 8000240:	af00      	add	r7, sp, #0
 8000242:	6078      	str	r0, [r7, #4]
	GPIO_Button->pGPIOx = GPIOA;
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	4a0a      	ldr	r2, [pc, #40]	; (8000270 <GPIO_ButtonInit+0x34>)
 8000248:	601a      	str	r2, [r3, #0]
	GPIO_Button->GPIOx_PinConfig.GPIO_PinMode = GPIO_INPUT_MODE;
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	2200      	movs	r2, #0
 800024e:	609a      	str	r2, [r3, #8]
	GPIO_Button->GPIOx_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	2201      	movs	r2, #1
 8000254:	605a      	str	r2, [r3, #4]
	GPIO_Button->GPIOx_PinConfig.GPIO_PinPuPdCtrl = GPIO_NO_PU_PD;
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	2200      	movs	r2, #0
 800025a:	611a      	str	r2, [r3, #16]
	GPIO_Button->GPIOx_PinConfig.GPIO_PinSpeed = GPIO_HIGH_SPEED;
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	2202      	movs	r2, #2
 8000260:	60da      	str	r2, [r3, #12]
}
 8000262:	bf00      	nop
 8000264:	370c      	adds	r7, #12
 8000266:	46bd      	mov	sp, r7
 8000268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop
 8000270:	40020000 	.word	0x40020000

08000274 <GPIO_I2CInit>:

void GPIO_I2CInit(GPIO_Handle_t* I2C_GPIO) {
 8000274:	b480      	push	{r7}
 8000276:	b083      	sub	sp, #12
 8000278:	af00      	add	r7, sp, #0
 800027a:	6078      	str	r0, [r7, #4]
	I2C_GPIO->pGPIOx = GPIOB;
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <GPIO_I2CInit+0x40>)
 8000280:	601a      	str	r2, [r3, #0]
	I2C_GPIO->GPIOx_PinConfig.GPIO_PinMode = GPIO_ALT_FUNC_MODE;
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	2202      	movs	r2, #2
 8000286:	609a      	str	r2, [r3, #8]
	I2C_GPIO->GPIOx_PinConfig.GPIO_PinAltFuncMode = AF4;
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	2204      	movs	r2, #4
 800028c:	619a      	str	r2, [r3, #24]
	I2C_GPIO->GPIOx_PinConfig.GPIO_PinNumber = GPIO_PIN_10 | GPIO_PIN_11;
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	f44f 6240 	mov.w	r2, #3072	; 0xc00
 8000294:	605a      	str	r2, [r3, #4]
	I2C_GPIO->GPIOx_PinConfig.GPIO_PinOPType = GPIO_OPEN_DRAIN;
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	2201      	movs	r2, #1
 800029a:	615a      	str	r2, [r3, #20]
	I2C_GPIO->GPIOx_PinConfig.GPIO_PinPuPdCtrl = GPIO_PU;
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	2201      	movs	r2, #1
 80002a0:	611a      	str	r2, [r3, #16]
	I2C_GPIO->GPIOx_PinConfig.GPIO_PinSpeed = GPIO_HIGH_SPEED;
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	2202      	movs	r2, #2
 80002a6:	60da      	str	r2, [r3, #12]
}
 80002a8:	bf00      	nop
 80002aa:	370c      	adds	r7, #12
 80002ac:	46bd      	mov	sp, r7
 80002ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b2:	4770      	bx	lr
 80002b4:	40020400 	.word	0x40020400

080002b8 <I2C_HandlerInit>:

void I2C_HandlerInit(I2C_Handle_t* I2C_Handler) {
 80002b8:	b480      	push	{r7}
 80002ba:	b083      	sub	sp, #12
 80002bc:	af00      	add	r7, sp, #0
 80002be:	6078      	str	r0, [r7, #4]
	I2C_Handler->pI2Cx = I2C2;
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a08      	ldr	r2, [pc, #32]	; (80002e4 <I2C_HandlerInit+0x2c>)
 80002c4:	601a      	str	r2, [r3, #0]
	I2C_Handler->I2C_Config.ACKControl = I2C_ACK_EN;
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	2201      	movs	r2, #1
 80002ca:	719a      	strb	r2, [r3, #6]
	I2C_Handler->I2C_Config.FMDutyCycle = I2C_FM_DUTY_2;
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	2200      	movs	r2, #0
 80002d0:	71da      	strb	r2, [r3, #7]
	I2C_Handler->I2C_Config.SCLSpeed = I2C_SCL_SPEED_SM;
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	2200      	movs	r2, #0
 80002d6:	711a      	strb	r2, [r3, #4]
}
 80002d8:	bf00      	nop
 80002da:	370c      	adds	r7, #12
 80002dc:	46bd      	mov	sp, r7
 80002de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e2:	4770      	bx	lr
 80002e4:	40005800 	.word	0x40005800

080002e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e8:	480d      	ldr	r0, [pc, #52]	; (8000320 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ea:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ec:	480d      	ldr	r0, [pc, #52]	; (8000324 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ee:	490e      	ldr	r1, [pc, #56]	; (8000328 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f0:	4a0e      	ldr	r2, [pc, #56]	; (800032c <LoopForever+0xe>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f4:	e002      	b.n	80002fc <LoopCopyDataInit>

080002f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002fa:	3304      	adds	r3, #4

080002fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000300:	d3f9      	bcc.n	80002f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000302:	4a0b      	ldr	r2, [pc, #44]	; (8000330 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000304:	4c0b      	ldr	r4, [pc, #44]	; (8000334 <LoopForever+0x16>)
  movs r3, #0
 8000306:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000308:	e001      	b.n	800030e <LoopFillZerobss>

0800030a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800030a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800030c:	3204      	adds	r2, #4

0800030e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000310:	d3fb      	bcc.n	800030a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000312:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000316:	f000 f811 	bl	800033c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800031a:	f7ff ff65 	bl	80001e8 <main>

0800031e <LoopForever>:

LoopForever:
    b LoopForever
 800031e:	e7fe      	b.n	800031e <LoopForever>
  ldr   r0, =_estack
 8000320:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000324:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000328:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800032c:	080003b4 	.word	0x080003b4
  ldr r2, =_sbss
 8000330:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000334:	2000001c 	.word	0x2000001c

08000338 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000338:	e7fe      	b.n	8000338 <ADC_IRQHandler>
	...

0800033c <__libc_init_array>:
 800033c:	b570      	push	{r4, r5, r6, lr}
 800033e:	4e0d      	ldr	r6, [pc, #52]	; (8000374 <__libc_init_array+0x38>)
 8000340:	4c0d      	ldr	r4, [pc, #52]	; (8000378 <__libc_init_array+0x3c>)
 8000342:	1ba4      	subs	r4, r4, r6
 8000344:	10a4      	asrs	r4, r4, #2
 8000346:	2500      	movs	r5, #0
 8000348:	42a5      	cmp	r5, r4
 800034a:	d109      	bne.n	8000360 <__libc_init_array+0x24>
 800034c:	4e0b      	ldr	r6, [pc, #44]	; (800037c <__libc_init_array+0x40>)
 800034e:	4c0c      	ldr	r4, [pc, #48]	; (8000380 <__libc_init_array+0x44>)
 8000350:	f000 f820 	bl	8000394 <_init>
 8000354:	1ba4      	subs	r4, r4, r6
 8000356:	10a4      	asrs	r4, r4, #2
 8000358:	2500      	movs	r5, #0
 800035a:	42a5      	cmp	r5, r4
 800035c:	d105      	bne.n	800036a <__libc_init_array+0x2e>
 800035e:	bd70      	pop	{r4, r5, r6, pc}
 8000360:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000364:	4798      	blx	r3
 8000366:	3501      	adds	r5, #1
 8000368:	e7ee      	b.n	8000348 <__libc_init_array+0xc>
 800036a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800036e:	4798      	blx	r3
 8000370:	3501      	adds	r5, #1
 8000372:	e7f2      	b.n	800035a <__libc_init_array+0x1e>
 8000374:	080003ac 	.word	0x080003ac
 8000378:	080003ac 	.word	0x080003ac
 800037c:	080003ac 	.word	0x080003ac
 8000380:	080003b0 	.word	0x080003b0

08000384 <memset>:
 8000384:	4402      	add	r2, r0
 8000386:	4603      	mov	r3, r0
 8000388:	4293      	cmp	r3, r2
 800038a:	d100      	bne.n	800038e <memset+0xa>
 800038c:	4770      	bx	lr
 800038e:	f803 1b01 	strb.w	r1, [r3], #1
 8000392:	e7f9      	b.n	8000388 <memset+0x4>

08000394 <_init>:
 8000394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000396:	bf00      	nop
 8000398:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039a:	bc08      	pop	{r3}
 800039c:	469e      	mov	lr, r3
 800039e:	4770      	bx	lr

080003a0 <_fini>:
 80003a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003a2:	bf00      	nop
 80003a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a6:	bc08      	pop	{r3}
 80003a8:	469e      	mov	lr, r3
 80003aa:	4770      	bx	lr
