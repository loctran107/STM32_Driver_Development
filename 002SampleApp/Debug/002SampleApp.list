
002SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000140c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  080015bc  080015bc  000115bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016b0  080016b0  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  080016b0  080016b0  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016b0  080016b0  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016b0  080016b0  000116b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016b4  080016b4  000116b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  080016b8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  200000ac  08001764  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000d8  08001764  000200d8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002275  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000646  00000000  00000000  00022351  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000138  00000000  00000000  00022998  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00022ad0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002824  00000000  00000000  00022bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000137c  00000000  00000000  000253f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000087ad  00000000  00000000  00026770  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002ef1d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c1c  00000000  00000000  0002ef98  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080015a4 	.word	0x080015a4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	080015a4 	.word	0x080015a4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b084      	sub	sp, #16
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800029a:	2300      	movs	r3, #0
 800029c:	60fb      	str	r3, [r7, #12]
 800029e:	e015      	b.n	80002cc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002a0:	f000 fa42 	bl	8000728 <rand>
 80002a4:	4602      	mov	r2, r0
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	6879      	ldr	r1, [r7, #4]
 80002ac:	4419      	add	r1, r3
 80002ae:	4b0b      	ldr	r3, [pc, #44]	; (80002dc <array_fill_numbers+0x4c>)
 80002b0:	fb83 0302 	smull	r0, r3, r3, r2
 80002b4:	1198      	asrs	r0, r3, #6
 80002b6:	17d3      	asrs	r3, r2, #31
 80002b8:	1ac3      	subs	r3, r0, r3
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	fb00 f303 	mul.w	r3, r0, r3
 80002c2:	1ad3      	subs	r3, r2, r3
 80002c4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	68fa      	ldr	r2, [r7, #12]
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d3e5      	bcc.n	80002a0 <array_fill_numbers+0x10>
    }

}
 80002d4:	bf00      	nop
 80002d6:	3710      	adds	r7, #16
 80002d8:	46bd      	mov	sp, r7
 80002da:	bd80      	pop	{r7, pc}
 80002dc:	10624dd3 	.word	0x10624dd3

080002e0 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b086      	sub	sp, #24
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	60f8      	str	r0, [r7, #12]
 80002e8:	60b9      	str	r1, [r7, #8]
 80002ea:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002ec:	6879      	ldr	r1, [r7, #4]
 80002ee:	480e      	ldr	r0, [pc, #56]	; (8000328 <display_numbers+0x48>)
 80002f0:	f000 f9ee 	bl	80006d0 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002f4:	2300      	movs	r3, #0
 80002f6:	617b      	str	r3, [r7, #20]
 80002f8:	e00b      	b.n	8000312 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	009b      	lsls	r3, r3, #2
 80002fe:	68fa      	ldr	r2, [r7, #12]
 8000300:	4413      	add	r3, r2
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4619      	mov	r1, r3
 8000306:	4809      	ldr	r0, [pc, #36]	; (800032c <display_numbers+0x4c>)
 8000308:	f000 f9e2 	bl	80006d0 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 800030c:	697b      	ldr	r3, [r7, #20]
 800030e:	3301      	adds	r3, #1
 8000310:	617b      	str	r3, [r7, #20]
 8000312:	697a      	ldr	r2, [r7, #20]
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	429a      	cmp	r2, r3
 8000318:	d3ef      	bcc.n	80002fa <display_numbers+0x1a>
    }

    printf("\n");
 800031a:	200a      	movs	r0, #10
 800031c:	f000 f9f0 	bl	8000700 <putchar>
}
 8000320:	bf00      	nop
 8000322:	3718      	adds	r7, #24
 8000324:	46bd      	mov	sp, r7
 8000326:	bd80      	pop	{r7, pc}
 8000328:	080015bc 	.word	0x080015bc
 800032c:	080015c0 	.word	0x080015c0

08000330 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000330:	b480      	push	{r7}
 8000332:	b085      	sub	sp, #20
 8000334:	af00      	add	r7, sp, #0
 8000336:	6078      	str	r0, [r7, #4]
 8000338:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000340:	683b      	ldr	r3, [r7, #0]
 8000342:	681a      	ldr	r2, [r3, #0]
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	601a      	str	r2, [r3, #0]
     *y=temp;
 8000348:	683b      	ldr	r3, [r7, #0]
 800034a:	68fa      	ldr	r2, [r7, #12]
 800034c:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000008;
     jump_addr();
#endif

     someData = 10;
 800034e:	4b04      	ldr	r3, [pc, #16]	; (8000360 <swap_numbers+0x30>)
 8000350:	220a      	movs	r2, #10
 8000352:	601a      	str	r2, [r3, #0]
}
 8000354:	bf00      	nop
 8000356:	3714      	adds	r7, #20
 8000358:	46bd      	mov	sp, r7
 800035a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035e:	4770      	bx	lr
 8000360:	20000044 	.word	0x20000044

08000364 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	b086      	sub	sp, #24
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]
 800036c:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 800036e:	2300      	movs	r3, #0
 8000370:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000372:	2300      	movs	r3, #0
 8000374:	617b      	str	r3, [r7, #20]
 8000376:	e02f      	b.n	80003d8 <bubble_sort+0x74>
    {
        flag=0;
 8000378:	2300      	movs	r3, #0
 800037a:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 800037c:	2300      	movs	r3, #0
 800037e:	613b      	str	r3, [r7, #16]
 8000380:	e01d      	b.n	80003be <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000382:	693b      	ldr	r3, [r7, #16]
 8000384:	009b      	lsls	r3, r3, #2
 8000386:	687a      	ldr	r2, [r7, #4]
 8000388:	4413      	add	r3, r2
 800038a:	681a      	ldr	r2, [r3, #0]
 800038c:	693b      	ldr	r3, [r7, #16]
 800038e:	3301      	adds	r3, #1
 8000390:	009b      	lsls	r3, r3, #2
 8000392:	6879      	ldr	r1, [r7, #4]
 8000394:	440b      	add	r3, r1
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	429a      	cmp	r2, r3
 800039a:	dd0d      	ble.n	80003b8 <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 800039c:	693b      	ldr	r3, [r7, #16]
 800039e:	009b      	lsls	r3, r3, #2
 80003a0:	687a      	ldr	r2, [r7, #4]
 80003a2:	18d0      	adds	r0, r2, r3
 80003a4:	693b      	ldr	r3, [r7, #16]
 80003a6:	3301      	adds	r3, #1
 80003a8:	009b      	lsls	r3, r3, #2
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	4413      	add	r3, r2
 80003ae:	4619      	mov	r1, r3
 80003b0:	f7ff ffbe 	bl	8000330 <swap_numbers>
                flag=1;
 80003b4:	2301      	movs	r3, #1
 80003b6:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003b8:	693b      	ldr	r3, [r7, #16]
 80003ba:	3301      	adds	r3, #1
 80003bc:	613b      	str	r3, [r7, #16]
 80003be:	697b      	ldr	r3, [r7, #20]
 80003c0:	683a      	ldr	r2, [r7, #0]
 80003c2:	1ad3      	subs	r3, r2, r3
 80003c4:	1e5a      	subs	r2, r3, #1
 80003c6:	693b      	ldr	r3, [r7, #16]
 80003c8:	429a      	cmp	r2, r3
 80003ca:	d8da      	bhi.n	8000382 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003cc:	68fb      	ldr	r3, [r7, #12]
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d008      	beq.n	80003e4 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003d2:	697b      	ldr	r3, [r7, #20]
 80003d4:	3301      	adds	r3, #1
 80003d6:	617b      	str	r3, [r7, #20]
 80003d8:	683b      	ldr	r3, [r7, #0]
 80003da:	1e5a      	subs	r2, r3, #1
 80003dc:	697b      	ldr	r3, [r7, #20]
 80003de:	429a      	cmp	r2, r3
 80003e0:	d8ca      	bhi.n	8000378 <bubble_sort+0x14>
            break;
    }
}
 80003e2:	e000      	b.n	80003e6 <bubble_sort+0x82>
            break;
 80003e4:	bf00      	nop
}
 80003e6:	bf00      	nop
 80003e8:	3718      	adds	r7, #24
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bd80      	pop	{r7, pc}

080003ee <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003ee:	b480      	push	{r7}
 80003f0:	b087      	sub	sp, #28
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	6078      	str	r0, [r7, #4]
 80003f6:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003f8:	2301      	movs	r3, #1
 80003fa:	617b      	str	r3, [r7, #20]
 80003fc:	e02c      	b.n	8000458 <insertion_sort+0x6a>
     {
         j=i-1;
 80003fe:	697b      	ldr	r3, [r7, #20]
 8000400:	3b01      	subs	r3, #1
 8000402:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000404:	697b      	ldr	r3, [r7, #20]
 8000406:	009b      	lsls	r3, r3, #2
 8000408:	687a      	ldr	r2, [r7, #4]
 800040a:	4413      	add	r3, r2
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000410:	e00d      	b.n	800042e <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000412:	693b      	ldr	r3, [r7, #16]
 8000414:	009b      	lsls	r3, r3, #2
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	441a      	add	r2, r3
 800041a:	693b      	ldr	r3, [r7, #16]
 800041c:	3301      	adds	r3, #1
 800041e:	009b      	lsls	r3, r3, #2
 8000420:	6879      	ldr	r1, [r7, #4]
 8000422:	440b      	add	r3, r1
 8000424:	6812      	ldr	r2, [r2, #0]
 8000426:	601a      	str	r2, [r3, #0]
             j--;
 8000428:	693b      	ldr	r3, [r7, #16]
 800042a:	3b01      	subs	r3, #1
 800042c:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 800042e:	693b      	ldr	r3, [r7, #16]
 8000430:	2b00      	cmp	r3, #0
 8000432:	db07      	blt.n	8000444 <insertion_sort+0x56>
 8000434:	693b      	ldr	r3, [r7, #16]
 8000436:	009b      	lsls	r3, r3, #2
 8000438:	687a      	ldr	r2, [r7, #4]
 800043a:	4413      	add	r3, r2
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	68fa      	ldr	r2, [r7, #12]
 8000440:	429a      	cmp	r2, r3
 8000442:	dbe6      	blt.n	8000412 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000444:	693b      	ldr	r3, [r7, #16]
 8000446:	3301      	adds	r3, #1
 8000448:	009b      	lsls	r3, r3, #2
 800044a:	687a      	ldr	r2, [r7, #4]
 800044c:	4413      	add	r3, r2
 800044e:	68fa      	ldr	r2, [r7, #12]
 8000450:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000452:	697b      	ldr	r3, [r7, #20]
 8000454:	3301      	adds	r3, #1
 8000456:	617b      	str	r3, [r7, #20]
 8000458:	697b      	ldr	r3, [r7, #20]
 800045a:	683a      	ldr	r2, [r7, #0]
 800045c:	429a      	cmp	r2, r3
 800045e:	d8ce      	bhi.n	80003fe <insertion_sort+0x10>
     }


}
 8000460:	bf00      	nop
 8000462:	371c      	adds	r7, #28
 8000464:	46bd      	mov	sp, r7
 8000466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046a:	4770      	bx	lr

0800046c <main>:



int main()
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b082      	sub	sp, #8
 8000470:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000472:	2311      	movs	r3, #17
 8000474:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 8000476:	6879      	ldr	r1, [r7, #4]
 8000478:	4815      	ldr	r0, [pc, #84]	; (80004d0 <main+0x64>)
 800047a:	f7ff ff09 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 800047e:	4a15      	ldr	r2, [pc, #84]	; (80004d4 <main+0x68>)
 8000480:	6879      	ldr	r1, [r7, #4]
 8000482:	4813      	ldr	r0, [pc, #76]	; (80004d0 <main+0x64>)
 8000484:	f7ff ff2c 	bl	80002e0 <display_numbers>

    bubble_sort(numbers,len);
 8000488:	6879      	ldr	r1, [r7, #4]
 800048a:	4811      	ldr	r0, [pc, #68]	; (80004d0 <main+0x64>)
 800048c:	f7ff ff6a 	bl	8000364 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000490:	4a11      	ldr	r2, [pc, #68]	; (80004d8 <main+0x6c>)
 8000492:	6879      	ldr	r1, [r7, #4]
 8000494:	480e      	ldr	r0, [pc, #56]	; (80004d0 <main+0x64>)
 8000496:	f7ff ff23 	bl	80002e0 <display_numbers>

    array_fill_numbers(numbers,len);
 800049a:	6879      	ldr	r1, [r7, #4]
 800049c:	480c      	ldr	r0, [pc, #48]	; (80004d0 <main+0x64>)
 800049e:	f7ff fef7 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004a2:	4a0e      	ldr	r2, [pc, #56]	; (80004dc <main+0x70>)
 80004a4:	6879      	ldr	r1, [r7, #4]
 80004a6:	480a      	ldr	r0, [pc, #40]	; (80004d0 <main+0x64>)
 80004a8:	f7ff ff1a 	bl	80002e0 <display_numbers>

    insertion_sort(numbers,len);
 80004ac:	6879      	ldr	r1, [r7, #4]
 80004ae:	4808      	ldr	r0, [pc, #32]	; (80004d0 <main+0x64>)
 80004b0:	f7ff ff9d 	bl	80003ee <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004b4:	4a0a      	ldr	r2, [pc, #40]	; (80004e0 <main+0x74>)
 80004b6:	6879      	ldr	r1, [r7, #4]
 80004b8:	4805      	ldr	r0, [pc, #20]	; (80004d0 <main+0x64>)
 80004ba:	f7ff ff11 	bl	80002e0 <display_numbers>

    insertion_sort(numbers, len);
 80004be:	6879      	ldr	r1, [r7, #4]
 80004c0:	4803      	ldr	r0, [pc, #12]	; (80004d0 <main+0x64>)
 80004c2:	f7ff ff94 	bl	80003ee <insertion_sort>

    return 0;
 80004c6:	2300      	movs	r3, #0
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	3708      	adds	r7, #8
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bd80      	pop	{r7, pc}
 80004d0:	20000000 	.word	0x20000000
 80004d4:	080015c8 	.word	0x080015c8
 80004d8:	080015dc 	.word	0x080015dc
 80004dc:	080015f0 	.word	0x080015f0
 80004e0:	08001604 	.word	0x08001604

080004e4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	b086      	sub	sp, #24
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	60f8      	str	r0, [r7, #12]
 80004ec:	60b9      	str	r1, [r7, #8]
 80004ee:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004f0:	2300      	movs	r3, #0
 80004f2:	617b      	str	r3, [r7, #20]
 80004f4:	e00a      	b.n	800050c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80004f6:	f3af 8000 	nop.w
 80004fa:	4601      	mov	r1, r0
 80004fc:	68bb      	ldr	r3, [r7, #8]
 80004fe:	1c5a      	adds	r2, r3, #1
 8000500:	60ba      	str	r2, [r7, #8]
 8000502:	b2ca      	uxtb	r2, r1
 8000504:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000506:	697b      	ldr	r3, [r7, #20]
 8000508:	3301      	adds	r3, #1
 800050a:	617b      	str	r3, [r7, #20]
 800050c:	697a      	ldr	r2, [r7, #20]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	429a      	cmp	r2, r3
 8000512:	dbf0      	blt.n	80004f6 <_read+0x12>
	}

return len;
 8000514:	687b      	ldr	r3, [r7, #4]
}
 8000516:	4618      	mov	r0, r3
 8000518:	3718      	adds	r7, #24
 800051a:	46bd      	mov	sp, r7
 800051c:	bd80      	pop	{r7, pc}

0800051e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800051e:	b580      	push	{r7, lr}
 8000520:	b086      	sub	sp, #24
 8000522:	af00      	add	r7, sp, #0
 8000524:	60f8      	str	r0, [r7, #12]
 8000526:	60b9      	str	r1, [r7, #8]
 8000528:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800052a:	2300      	movs	r3, #0
 800052c:	617b      	str	r3, [r7, #20]
 800052e:	e009      	b.n	8000544 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000530:	68bb      	ldr	r3, [r7, #8]
 8000532:	1c5a      	adds	r2, r3, #1
 8000534:	60ba      	str	r2, [r7, #8]
 8000536:	781b      	ldrb	r3, [r3, #0]
 8000538:	4618      	mov	r0, r3
 800053a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800053e:	697b      	ldr	r3, [r7, #20]
 8000540:	3301      	adds	r3, #1
 8000542:	617b      	str	r3, [r7, #20]
 8000544:	697a      	ldr	r2, [r7, #20]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	429a      	cmp	r2, r3
 800054a:	dbf1      	blt.n	8000530 <_write+0x12>
	}
	return len;
 800054c:	687b      	ldr	r3, [r7, #4]
}
 800054e:	4618      	mov	r0, r3
 8000550:	3718      	adds	r7, #24
 8000552:	46bd      	mov	sp, r7
 8000554:	bd80      	pop	{r7, pc}

08000556 <_close>:

int _close(int file)
{
 8000556:	b480      	push	{r7}
 8000558:	b083      	sub	sp, #12
 800055a:	af00      	add	r7, sp, #0
 800055c:	6078      	str	r0, [r7, #4]
	return -1;
 800055e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000562:	4618      	mov	r0, r3
 8000564:	370c      	adds	r7, #12
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr

0800056e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800056e:	b480      	push	{r7}
 8000570:	b083      	sub	sp, #12
 8000572:	af00      	add	r7, sp, #0
 8000574:	6078      	str	r0, [r7, #4]
 8000576:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000578:	683b      	ldr	r3, [r7, #0]
 800057a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800057e:	605a      	str	r2, [r3, #4]
	return 0;
 8000580:	2300      	movs	r3, #0
}
 8000582:	4618      	mov	r0, r3
 8000584:	370c      	adds	r7, #12
 8000586:	46bd      	mov	sp, r7
 8000588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058c:	4770      	bx	lr

0800058e <_isatty>:

int _isatty(int file)
{
 800058e:	b480      	push	{r7}
 8000590:	b083      	sub	sp, #12
 8000592:	af00      	add	r7, sp, #0
 8000594:	6078      	str	r0, [r7, #4]
	return 1;
 8000596:	2301      	movs	r3, #1
}
 8000598:	4618      	mov	r0, r3
 800059a:	370c      	adds	r7, #12
 800059c:	46bd      	mov	sp, r7
 800059e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a2:	4770      	bx	lr

080005a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005a4:	b480      	push	{r7}
 80005a6:	b085      	sub	sp, #20
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	60f8      	str	r0, [r7, #12]
 80005ac:	60b9      	str	r1, [r7, #8]
 80005ae:	607a      	str	r2, [r7, #4]
	return 0;
 80005b0:	2300      	movs	r3, #0
}
 80005b2:	4618      	mov	r0, r3
 80005b4:	3714      	adds	r7, #20
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr
	...

080005c0 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b084      	sub	sp, #16
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80005c8:	4b11      	ldr	r3, [pc, #68]	; (8000610 <_sbrk+0x50>)
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	2b00      	cmp	r3, #0
 80005ce:	d102      	bne.n	80005d6 <_sbrk+0x16>
		heap_end = &end;
 80005d0:	4b0f      	ldr	r3, [pc, #60]	; (8000610 <_sbrk+0x50>)
 80005d2:	4a10      	ldr	r2, [pc, #64]	; (8000614 <_sbrk+0x54>)
 80005d4:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80005d6:	4b0e      	ldr	r3, [pc, #56]	; (8000610 <_sbrk+0x50>)
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80005dc:	4b0c      	ldr	r3, [pc, #48]	; (8000610 <_sbrk+0x50>)
 80005de:	681a      	ldr	r2, [r3, #0]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	4413      	add	r3, r2
 80005e4:	466a      	mov	r2, sp
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d907      	bls.n	80005fa <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80005ea:	f000 f83f 	bl	800066c <__errno>
 80005ee:	4602      	mov	r2, r0
 80005f0:	230c      	movs	r3, #12
 80005f2:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80005f4:	f04f 33ff 	mov.w	r3, #4294967295
 80005f8:	e006      	b.n	8000608 <_sbrk+0x48>
	}

	heap_end += incr;
 80005fa:	4b05      	ldr	r3, [pc, #20]	; (8000610 <_sbrk+0x50>)
 80005fc:	681a      	ldr	r2, [r3, #0]
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	4413      	add	r3, r2
 8000602:	4a03      	ldr	r2, [pc, #12]	; (8000610 <_sbrk+0x50>)
 8000604:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000606:	68fb      	ldr	r3, [r7, #12]
}
 8000608:	4618      	mov	r0, r3
 800060a:	3710      	adds	r7, #16
 800060c:	46bd      	mov	sp, r7
 800060e:	bd80      	pop	{r7, pc}
 8000610:	200000c8 	.word	0x200000c8
 8000614:	200000d8 	.word	0x200000d8

08000618 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000618:	480d      	ldr	r0, [pc, #52]	; (8000650 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800061a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800061c:	480d      	ldr	r0, [pc, #52]	; (8000654 <LoopForever+0x6>)
  ldr r1, =_edata
 800061e:	490e      	ldr	r1, [pc, #56]	; (8000658 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000620:	4a0e      	ldr	r2, [pc, #56]	; (800065c <LoopForever+0xe>)
  movs r3, #0
 8000622:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000624:	e002      	b.n	800062c <LoopCopyDataInit>

08000626 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000626:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000628:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800062a:	3304      	adds	r3, #4

0800062c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800062c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800062e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000630:	d3f9      	bcc.n	8000626 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000632:	4a0b      	ldr	r2, [pc, #44]	; (8000660 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000634:	4c0b      	ldr	r4, [pc, #44]	; (8000664 <LoopForever+0x16>)
  movs r3, #0
 8000636:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000638:	e001      	b.n	800063e <LoopFillZerobss>

0800063a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800063a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800063c:	3204      	adds	r2, #4

0800063e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800063e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000640:	d3fb      	bcc.n	800063a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000642:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000646:	f000 f817 	bl	8000678 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800064a:	f7ff ff0f 	bl	800046c <main>

0800064e <LoopForever>:

LoopForever:
    b LoopForever
 800064e:	e7fe      	b.n	800064e <LoopForever>
  ldr   r0, =_estack
 8000650:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000654:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000658:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 800065c:	080016b8 	.word	0x080016b8
  ldr r2, =_sbss
 8000660:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 8000664:	200000d8 	.word	0x200000d8

08000668 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000668:	e7fe      	b.n	8000668 <ADC_IRQHandler>
	...

0800066c <__errno>:
 800066c:	4b01      	ldr	r3, [pc, #4]	; (8000674 <__errno+0x8>)
 800066e:	6818      	ldr	r0, [r3, #0]
 8000670:	4770      	bx	lr
 8000672:	bf00      	nop
 8000674:	20000048 	.word	0x20000048

08000678 <__libc_init_array>:
 8000678:	b570      	push	{r4, r5, r6, lr}
 800067a:	4e0d      	ldr	r6, [pc, #52]	; (80006b0 <__libc_init_array+0x38>)
 800067c:	4c0d      	ldr	r4, [pc, #52]	; (80006b4 <__libc_init_array+0x3c>)
 800067e:	1ba4      	subs	r4, r4, r6
 8000680:	10a4      	asrs	r4, r4, #2
 8000682:	2500      	movs	r5, #0
 8000684:	42a5      	cmp	r5, r4
 8000686:	d109      	bne.n	800069c <__libc_init_array+0x24>
 8000688:	4e0b      	ldr	r6, [pc, #44]	; (80006b8 <__libc_init_array+0x40>)
 800068a:	4c0c      	ldr	r4, [pc, #48]	; (80006bc <__libc_init_array+0x44>)
 800068c:	f000 ff8a 	bl	80015a4 <_init>
 8000690:	1ba4      	subs	r4, r4, r6
 8000692:	10a4      	asrs	r4, r4, #2
 8000694:	2500      	movs	r5, #0
 8000696:	42a5      	cmp	r5, r4
 8000698:	d105      	bne.n	80006a6 <__libc_init_array+0x2e>
 800069a:	bd70      	pop	{r4, r5, r6, pc}
 800069c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006a0:	4798      	blx	r3
 80006a2:	3501      	adds	r5, #1
 80006a4:	e7ee      	b.n	8000684 <__libc_init_array+0xc>
 80006a6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006aa:	4798      	blx	r3
 80006ac:	3501      	adds	r5, #1
 80006ae:	e7f2      	b.n	8000696 <__libc_init_array+0x1e>
 80006b0:	080016b0 	.word	0x080016b0
 80006b4:	080016b0 	.word	0x080016b0
 80006b8:	080016b0 	.word	0x080016b0
 80006bc:	080016b4 	.word	0x080016b4

080006c0 <memset>:
 80006c0:	4402      	add	r2, r0
 80006c2:	4603      	mov	r3, r0
 80006c4:	4293      	cmp	r3, r2
 80006c6:	d100      	bne.n	80006ca <memset+0xa>
 80006c8:	4770      	bx	lr
 80006ca:	f803 1b01 	strb.w	r1, [r3], #1
 80006ce:	e7f9      	b.n	80006c4 <memset+0x4>

080006d0 <iprintf>:
 80006d0:	b40f      	push	{r0, r1, r2, r3}
 80006d2:	4b0a      	ldr	r3, [pc, #40]	; (80006fc <iprintf+0x2c>)
 80006d4:	b513      	push	{r0, r1, r4, lr}
 80006d6:	681c      	ldr	r4, [r3, #0]
 80006d8:	b124      	cbz	r4, 80006e4 <iprintf+0x14>
 80006da:	69a3      	ldr	r3, [r4, #24]
 80006dc:	b913      	cbnz	r3, 80006e4 <iprintf+0x14>
 80006de:	4620      	mov	r0, r4
 80006e0:	f000 f896 	bl	8000810 <__sinit>
 80006e4:	ab05      	add	r3, sp, #20
 80006e6:	9a04      	ldr	r2, [sp, #16]
 80006e8:	68a1      	ldr	r1, [r4, #8]
 80006ea:	9301      	str	r3, [sp, #4]
 80006ec:	4620      	mov	r0, r4
 80006ee:	f000 f9f3 	bl	8000ad8 <_vfiprintf_r>
 80006f2:	b002      	add	sp, #8
 80006f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006f8:	b004      	add	sp, #16
 80006fa:	4770      	bx	lr
 80006fc:	20000048 	.word	0x20000048

08000700 <putchar>:
 8000700:	b538      	push	{r3, r4, r5, lr}
 8000702:	4b08      	ldr	r3, [pc, #32]	; (8000724 <putchar+0x24>)
 8000704:	681c      	ldr	r4, [r3, #0]
 8000706:	4605      	mov	r5, r0
 8000708:	b124      	cbz	r4, 8000714 <putchar+0x14>
 800070a:	69a3      	ldr	r3, [r4, #24]
 800070c:	b913      	cbnz	r3, 8000714 <putchar+0x14>
 800070e:	4620      	mov	r0, r4
 8000710:	f000 f87e 	bl	8000810 <__sinit>
 8000714:	68a2      	ldr	r2, [r4, #8]
 8000716:	4629      	mov	r1, r5
 8000718:	4620      	mov	r0, r4
 800071a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800071e:	f000 bc79 	b.w	8001014 <_putc_r>
 8000722:	bf00      	nop
 8000724:	20000048 	.word	0x20000048

08000728 <rand>:
 8000728:	b538      	push	{r3, r4, r5, lr}
 800072a:	4b13      	ldr	r3, [pc, #76]	; (8000778 <rand+0x50>)
 800072c:	681c      	ldr	r4, [r3, #0]
 800072e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000730:	b97b      	cbnz	r3, 8000752 <rand+0x2a>
 8000732:	2018      	movs	r0, #24
 8000734:	f000 f8f6 	bl	8000924 <malloc>
 8000738:	4a10      	ldr	r2, [pc, #64]	; (800077c <rand+0x54>)
 800073a:	4b11      	ldr	r3, [pc, #68]	; (8000780 <rand+0x58>)
 800073c:	63a0      	str	r0, [r4, #56]	; 0x38
 800073e:	e9c0 2300 	strd	r2, r3, [r0]
 8000742:	4b10      	ldr	r3, [pc, #64]	; (8000784 <rand+0x5c>)
 8000744:	6083      	str	r3, [r0, #8]
 8000746:	230b      	movs	r3, #11
 8000748:	8183      	strh	r3, [r0, #12]
 800074a:	2201      	movs	r2, #1
 800074c:	2300      	movs	r3, #0
 800074e:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000752:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8000754:	480c      	ldr	r0, [pc, #48]	; (8000788 <rand+0x60>)
 8000756:	690a      	ldr	r2, [r1, #16]
 8000758:	694b      	ldr	r3, [r1, #20]
 800075a:	4c0c      	ldr	r4, [pc, #48]	; (800078c <rand+0x64>)
 800075c:	4350      	muls	r0, r2
 800075e:	fb04 0003 	mla	r0, r4, r3, r0
 8000762:	fba2 2304 	umull	r2, r3, r2, r4
 8000766:	4403      	add	r3, r0
 8000768:	1c54      	adds	r4, r2, #1
 800076a:	f143 0500 	adc.w	r5, r3, #0
 800076e:	e9c1 4504 	strd	r4, r5, [r1, #16]
 8000772:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 8000776:	bd38      	pop	{r3, r4, r5, pc}
 8000778:	20000048 	.word	0x20000048
 800077c:	abcd330e 	.word	0xabcd330e
 8000780:	e66d1234 	.word	0xe66d1234
 8000784:	0005deec 	.word	0x0005deec
 8000788:	5851f42d 	.word	0x5851f42d
 800078c:	4c957f2d 	.word	0x4c957f2d

08000790 <std>:
 8000790:	2300      	movs	r3, #0
 8000792:	b510      	push	{r4, lr}
 8000794:	4604      	mov	r4, r0
 8000796:	e9c0 3300 	strd	r3, r3, [r0]
 800079a:	6083      	str	r3, [r0, #8]
 800079c:	8181      	strh	r1, [r0, #12]
 800079e:	6643      	str	r3, [r0, #100]	; 0x64
 80007a0:	81c2      	strh	r2, [r0, #14]
 80007a2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007a6:	6183      	str	r3, [r0, #24]
 80007a8:	4619      	mov	r1, r3
 80007aa:	2208      	movs	r2, #8
 80007ac:	305c      	adds	r0, #92	; 0x5c
 80007ae:	f7ff ff87 	bl	80006c0 <memset>
 80007b2:	4b05      	ldr	r3, [pc, #20]	; (80007c8 <std+0x38>)
 80007b4:	6263      	str	r3, [r4, #36]	; 0x24
 80007b6:	4b05      	ldr	r3, [pc, #20]	; (80007cc <std+0x3c>)
 80007b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80007ba:	4b05      	ldr	r3, [pc, #20]	; (80007d0 <std+0x40>)
 80007bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007be:	4b05      	ldr	r3, [pc, #20]	; (80007d4 <std+0x44>)
 80007c0:	6224      	str	r4, [r4, #32]
 80007c2:	6323      	str	r3, [r4, #48]	; 0x30
 80007c4:	bd10      	pop	{r4, pc}
 80007c6:	bf00      	nop
 80007c8:	080010a1 	.word	0x080010a1
 80007cc:	080010c3 	.word	0x080010c3
 80007d0:	080010fb 	.word	0x080010fb
 80007d4:	0800111f 	.word	0x0800111f

080007d8 <_cleanup_r>:
 80007d8:	4901      	ldr	r1, [pc, #4]	; (80007e0 <_cleanup_r+0x8>)
 80007da:	f000 b885 	b.w	80008e8 <_fwalk_reent>
 80007de:	bf00      	nop
 80007e0:	080013f9 	.word	0x080013f9

080007e4 <__sfmoreglue>:
 80007e4:	b570      	push	{r4, r5, r6, lr}
 80007e6:	1e4a      	subs	r2, r1, #1
 80007e8:	2568      	movs	r5, #104	; 0x68
 80007ea:	4355      	muls	r5, r2
 80007ec:	460e      	mov	r6, r1
 80007ee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80007f2:	f000 f8ed 	bl	80009d0 <_malloc_r>
 80007f6:	4604      	mov	r4, r0
 80007f8:	b140      	cbz	r0, 800080c <__sfmoreglue+0x28>
 80007fa:	2100      	movs	r1, #0
 80007fc:	e9c0 1600 	strd	r1, r6, [r0]
 8000800:	300c      	adds	r0, #12
 8000802:	60a0      	str	r0, [r4, #8]
 8000804:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000808:	f7ff ff5a 	bl	80006c0 <memset>
 800080c:	4620      	mov	r0, r4
 800080e:	bd70      	pop	{r4, r5, r6, pc}

08000810 <__sinit>:
 8000810:	6983      	ldr	r3, [r0, #24]
 8000812:	b510      	push	{r4, lr}
 8000814:	4604      	mov	r4, r0
 8000816:	bb33      	cbnz	r3, 8000866 <__sinit+0x56>
 8000818:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800081c:	6503      	str	r3, [r0, #80]	; 0x50
 800081e:	4b12      	ldr	r3, [pc, #72]	; (8000868 <__sinit+0x58>)
 8000820:	4a12      	ldr	r2, [pc, #72]	; (800086c <__sinit+0x5c>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	6282      	str	r2, [r0, #40]	; 0x28
 8000826:	4298      	cmp	r0, r3
 8000828:	bf04      	itt	eq
 800082a:	2301      	moveq	r3, #1
 800082c:	6183      	streq	r3, [r0, #24]
 800082e:	f000 f81f 	bl	8000870 <__sfp>
 8000832:	6060      	str	r0, [r4, #4]
 8000834:	4620      	mov	r0, r4
 8000836:	f000 f81b 	bl	8000870 <__sfp>
 800083a:	60a0      	str	r0, [r4, #8]
 800083c:	4620      	mov	r0, r4
 800083e:	f000 f817 	bl	8000870 <__sfp>
 8000842:	2200      	movs	r2, #0
 8000844:	60e0      	str	r0, [r4, #12]
 8000846:	2104      	movs	r1, #4
 8000848:	6860      	ldr	r0, [r4, #4]
 800084a:	f7ff ffa1 	bl	8000790 <std>
 800084e:	2201      	movs	r2, #1
 8000850:	2109      	movs	r1, #9
 8000852:	68a0      	ldr	r0, [r4, #8]
 8000854:	f7ff ff9c 	bl	8000790 <std>
 8000858:	2202      	movs	r2, #2
 800085a:	2112      	movs	r1, #18
 800085c:	68e0      	ldr	r0, [r4, #12]
 800085e:	f7ff ff97 	bl	8000790 <std>
 8000862:	2301      	movs	r3, #1
 8000864:	61a3      	str	r3, [r4, #24]
 8000866:	bd10      	pop	{r4, pc}
 8000868:	08001618 	.word	0x08001618
 800086c:	080007d9 	.word	0x080007d9

08000870 <__sfp>:
 8000870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000872:	4b1b      	ldr	r3, [pc, #108]	; (80008e0 <__sfp+0x70>)
 8000874:	681e      	ldr	r6, [r3, #0]
 8000876:	69b3      	ldr	r3, [r6, #24]
 8000878:	4607      	mov	r7, r0
 800087a:	b913      	cbnz	r3, 8000882 <__sfp+0x12>
 800087c:	4630      	mov	r0, r6
 800087e:	f7ff ffc7 	bl	8000810 <__sinit>
 8000882:	3648      	adds	r6, #72	; 0x48
 8000884:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000888:	3b01      	subs	r3, #1
 800088a:	d503      	bpl.n	8000894 <__sfp+0x24>
 800088c:	6833      	ldr	r3, [r6, #0]
 800088e:	b133      	cbz	r3, 800089e <__sfp+0x2e>
 8000890:	6836      	ldr	r6, [r6, #0]
 8000892:	e7f7      	b.n	8000884 <__sfp+0x14>
 8000894:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000898:	b16d      	cbz	r5, 80008b6 <__sfp+0x46>
 800089a:	3468      	adds	r4, #104	; 0x68
 800089c:	e7f4      	b.n	8000888 <__sfp+0x18>
 800089e:	2104      	movs	r1, #4
 80008a0:	4638      	mov	r0, r7
 80008a2:	f7ff ff9f 	bl	80007e4 <__sfmoreglue>
 80008a6:	6030      	str	r0, [r6, #0]
 80008a8:	2800      	cmp	r0, #0
 80008aa:	d1f1      	bne.n	8000890 <__sfp+0x20>
 80008ac:	230c      	movs	r3, #12
 80008ae:	603b      	str	r3, [r7, #0]
 80008b0:	4604      	mov	r4, r0
 80008b2:	4620      	mov	r0, r4
 80008b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008b6:	4b0b      	ldr	r3, [pc, #44]	; (80008e4 <__sfp+0x74>)
 80008b8:	6665      	str	r5, [r4, #100]	; 0x64
 80008ba:	e9c4 5500 	strd	r5, r5, [r4]
 80008be:	60a5      	str	r5, [r4, #8]
 80008c0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80008c4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80008c8:	2208      	movs	r2, #8
 80008ca:	4629      	mov	r1, r5
 80008cc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008d0:	f7ff fef6 	bl	80006c0 <memset>
 80008d4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008d8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008dc:	e7e9      	b.n	80008b2 <__sfp+0x42>
 80008de:	bf00      	nop
 80008e0:	08001618 	.word	0x08001618
 80008e4:	ffff0001 	.word	0xffff0001

080008e8 <_fwalk_reent>:
 80008e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008ec:	4680      	mov	r8, r0
 80008ee:	4689      	mov	r9, r1
 80008f0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008f4:	2600      	movs	r6, #0
 80008f6:	b914      	cbnz	r4, 80008fe <_fwalk_reent+0x16>
 80008f8:	4630      	mov	r0, r6
 80008fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008fe:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000902:	3f01      	subs	r7, #1
 8000904:	d501      	bpl.n	800090a <_fwalk_reent+0x22>
 8000906:	6824      	ldr	r4, [r4, #0]
 8000908:	e7f5      	b.n	80008f6 <_fwalk_reent+0xe>
 800090a:	89ab      	ldrh	r3, [r5, #12]
 800090c:	2b01      	cmp	r3, #1
 800090e:	d907      	bls.n	8000920 <_fwalk_reent+0x38>
 8000910:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000914:	3301      	adds	r3, #1
 8000916:	d003      	beq.n	8000920 <_fwalk_reent+0x38>
 8000918:	4629      	mov	r1, r5
 800091a:	4640      	mov	r0, r8
 800091c:	47c8      	blx	r9
 800091e:	4306      	orrs	r6, r0
 8000920:	3568      	adds	r5, #104	; 0x68
 8000922:	e7ee      	b.n	8000902 <_fwalk_reent+0x1a>

08000924 <malloc>:
 8000924:	4b02      	ldr	r3, [pc, #8]	; (8000930 <malloc+0xc>)
 8000926:	4601      	mov	r1, r0
 8000928:	6818      	ldr	r0, [r3, #0]
 800092a:	f000 b851 	b.w	80009d0 <_malloc_r>
 800092e:	bf00      	nop
 8000930:	20000048 	.word	0x20000048

08000934 <_free_r>:
 8000934:	b538      	push	{r3, r4, r5, lr}
 8000936:	4605      	mov	r5, r0
 8000938:	2900      	cmp	r1, #0
 800093a:	d045      	beq.n	80009c8 <_free_r+0x94>
 800093c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000940:	1f0c      	subs	r4, r1, #4
 8000942:	2b00      	cmp	r3, #0
 8000944:	bfb8      	it	lt
 8000946:	18e4      	addlt	r4, r4, r3
 8000948:	f000 fdf6 	bl	8001538 <__malloc_lock>
 800094c:	4a1f      	ldr	r2, [pc, #124]	; (80009cc <_free_r+0x98>)
 800094e:	6813      	ldr	r3, [r2, #0]
 8000950:	4610      	mov	r0, r2
 8000952:	b933      	cbnz	r3, 8000962 <_free_r+0x2e>
 8000954:	6063      	str	r3, [r4, #4]
 8000956:	6014      	str	r4, [r2, #0]
 8000958:	4628      	mov	r0, r5
 800095a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800095e:	f000 bdec 	b.w	800153a <__malloc_unlock>
 8000962:	42a3      	cmp	r3, r4
 8000964:	d90c      	bls.n	8000980 <_free_r+0x4c>
 8000966:	6821      	ldr	r1, [r4, #0]
 8000968:	1862      	adds	r2, r4, r1
 800096a:	4293      	cmp	r3, r2
 800096c:	bf04      	itt	eq
 800096e:	681a      	ldreq	r2, [r3, #0]
 8000970:	685b      	ldreq	r3, [r3, #4]
 8000972:	6063      	str	r3, [r4, #4]
 8000974:	bf04      	itt	eq
 8000976:	1852      	addeq	r2, r2, r1
 8000978:	6022      	streq	r2, [r4, #0]
 800097a:	6004      	str	r4, [r0, #0]
 800097c:	e7ec      	b.n	8000958 <_free_r+0x24>
 800097e:	4613      	mov	r3, r2
 8000980:	685a      	ldr	r2, [r3, #4]
 8000982:	b10a      	cbz	r2, 8000988 <_free_r+0x54>
 8000984:	42a2      	cmp	r2, r4
 8000986:	d9fa      	bls.n	800097e <_free_r+0x4a>
 8000988:	6819      	ldr	r1, [r3, #0]
 800098a:	1858      	adds	r0, r3, r1
 800098c:	42a0      	cmp	r0, r4
 800098e:	d10b      	bne.n	80009a8 <_free_r+0x74>
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	4401      	add	r1, r0
 8000994:	1858      	adds	r0, r3, r1
 8000996:	4282      	cmp	r2, r0
 8000998:	6019      	str	r1, [r3, #0]
 800099a:	d1dd      	bne.n	8000958 <_free_r+0x24>
 800099c:	6810      	ldr	r0, [r2, #0]
 800099e:	6852      	ldr	r2, [r2, #4]
 80009a0:	605a      	str	r2, [r3, #4]
 80009a2:	4401      	add	r1, r0
 80009a4:	6019      	str	r1, [r3, #0]
 80009a6:	e7d7      	b.n	8000958 <_free_r+0x24>
 80009a8:	d902      	bls.n	80009b0 <_free_r+0x7c>
 80009aa:	230c      	movs	r3, #12
 80009ac:	602b      	str	r3, [r5, #0]
 80009ae:	e7d3      	b.n	8000958 <_free_r+0x24>
 80009b0:	6820      	ldr	r0, [r4, #0]
 80009b2:	1821      	adds	r1, r4, r0
 80009b4:	428a      	cmp	r2, r1
 80009b6:	bf04      	itt	eq
 80009b8:	6811      	ldreq	r1, [r2, #0]
 80009ba:	6852      	ldreq	r2, [r2, #4]
 80009bc:	6062      	str	r2, [r4, #4]
 80009be:	bf04      	itt	eq
 80009c0:	1809      	addeq	r1, r1, r0
 80009c2:	6021      	streq	r1, [r4, #0]
 80009c4:	605c      	str	r4, [r3, #4]
 80009c6:	e7c7      	b.n	8000958 <_free_r+0x24>
 80009c8:	bd38      	pop	{r3, r4, r5, pc}
 80009ca:	bf00      	nop
 80009cc:	200000cc 	.word	0x200000cc

080009d0 <_malloc_r>:
 80009d0:	b570      	push	{r4, r5, r6, lr}
 80009d2:	1ccd      	adds	r5, r1, #3
 80009d4:	f025 0503 	bic.w	r5, r5, #3
 80009d8:	3508      	adds	r5, #8
 80009da:	2d0c      	cmp	r5, #12
 80009dc:	bf38      	it	cc
 80009de:	250c      	movcc	r5, #12
 80009e0:	2d00      	cmp	r5, #0
 80009e2:	4606      	mov	r6, r0
 80009e4:	db01      	blt.n	80009ea <_malloc_r+0x1a>
 80009e6:	42a9      	cmp	r1, r5
 80009e8:	d903      	bls.n	80009f2 <_malloc_r+0x22>
 80009ea:	230c      	movs	r3, #12
 80009ec:	6033      	str	r3, [r6, #0]
 80009ee:	2000      	movs	r0, #0
 80009f0:	bd70      	pop	{r4, r5, r6, pc}
 80009f2:	f000 fda1 	bl	8001538 <__malloc_lock>
 80009f6:	4a21      	ldr	r2, [pc, #132]	; (8000a7c <_malloc_r+0xac>)
 80009f8:	6814      	ldr	r4, [r2, #0]
 80009fa:	4621      	mov	r1, r4
 80009fc:	b991      	cbnz	r1, 8000a24 <_malloc_r+0x54>
 80009fe:	4c20      	ldr	r4, [pc, #128]	; (8000a80 <_malloc_r+0xb0>)
 8000a00:	6823      	ldr	r3, [r4, #0]
 8000a02:	b91b      	cbnz	r3, 8000a0c <_malloc_r+0x3c>
 8000a04:	4630      	mov	r0, r6
 8000a06:	f000 fb3b 	bl	8001080 <_sbrk_r>
 8000a0a:	6020      	str	r0, [r4, #0]
 8000a0c:	4629      	mov	r1, r5
 8000a0e:	4630      	mov	r0, r6
 8000a10:	f000 fb36 	bl	8001080 <_sbrk_r>
 8000a14:	1c43      	adds	r3, r0, #1
 8000a16:	d124      	bne.n	8000a62 <_malloc_r+0x92>
 8000a18:	230c      	movs	r3, #12
 8000a1a:	6033      	str	r3, [r6, #0]
 8000a1c:	4630      	mov	r0, r6
 8000a1e:	f000 fd8c 	bl	800153a <__malloc_unlock>
 8000a22:	e7e4      	b.n	80009ee <_malloc_r+0x1e>
 8000a24:	680b      	ldr	r3, [r1, #0]
 8000a26:	1b5b      	subs	r3, r3, r5
 8000a28:	d418      	bmi.n	8000a5c <_malloc_r+0x8c>
 8000a2a:	2b0b      	cmp	r3, #11
 8000a2c:	d90f      	bls.n	8000a4e <_malloc_r+0x7e>
 8000a2e:	600b      	str	r3, [r1, #0]
 8000a30:	50cd      	str	r5, [r1, r3]
 8000a32:	18cc      	adds	r4, r1, r3
 8000a34:	4630      	mov	r0, r6
 8000a36:	f000 fd80 	bl	800153a <__malloc_unlock>
 8000a3a:	f104 000b 	add.w	r0, r4, #11
 8000a3e:	1d23      	adds	r3, r4, #4
 8000a40:	f020 0007 	bic.w	r0, r0, #7
 8000a44:	1ac3      	subs	r3, r0, r3
 8000a46:	d0d3      	beq.n	80009f0 <_malloc_r+0x20>
 8000a48:	425a      	negs	r2, r3
 8000a4a:	50e2      	str	r2, [r4, r3]
 8000a4c:	e7d0      	b.n	80009f0 <_malloc_r+0x20>
 8000a4e:	428c      	cmp	r4, r1
 8000a50:	684b      	ldr	r3, [r1, #4]
 8000a52:	bf16      	itet	ne
 8000a54:	6063      	strne	r3, [r4, #4]
 8000a56:	6013      	streq	r3, [r2, #0]
 8000a58:	460c      	movne	r4, r1
 8000a5a:	e7eb      	b.n	8000a34 <_malloc_r+0x64>
 8000a5c:	460c      	mov	r4, r1
 8000a5e:	6849      	ldr	r1, [r1, #4]
 8000a60:	e7cc      	b.n	80009fc <_malloc_r+0x2c>
 8000a62:	1cc4      	adds	r4, r0, #3
 8000a64:	f024 0403 	bic.w	r4, r4, #3
 8000a68:	42a0      	cmp	r0, r4
 8000a6a:	d005      	beq.n	8000a78 <_malloc_r+0xa8>
 8000a6c:	1a21      	subs	r1, r4, r0
 8000a6e:	4630      	mov	r0, r6
 8000a70:	f000 fb06 	bl	8001080 <_sbrk_r>
 8000a74:	3001      	adds	r0, #1
 8000a76:	d0cf      	beq.n	8000a18 <_malloc_r+0x48>
 8000a78:	6025      	str	r5, [r4, #0]
 8000a7a:	e7db      	b.n	8000a34 <_malloc_r+0x64>
 8000a7c:	200000cc 	.word	0x200000cc
 8000a80:	200000d0 	.word	0x200000d0

08000a84 <__sfputc_r>:
 8000a84:	6893      	ldr	r3, [r2, #8]
 8000a86:	3b01      	subs	r3, #1
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	b410      	push	{r4}
 8000a8c:	6093      	str	r3, [r2, #8]
 8000a8e:	da08      	bge.n	8000aa2 <__sfputc_r+0x1e>
 8000a90:	6994      	ldr	r4, [r2, #24]
 8000a92:	42a3      	cmp	r3, r4
 8000a94:	db01      	blt.n	8000a9a <__sfputc_r+0x16>
 8000a96:	290a      	cmp	r1, #10
 8000a98:	d103      	bne.n	8000aa2 <__sfputc_r+0x1e>
 8000a9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a9e:	f000 bb43 	b.w	8001128 <__swbuf_r>
 8000aa2:	6813      	ldr	r3, [r2, #0]
 8000aa4:	1c58      	adds	r0, r3, #1
 8000aa6:	6010      	str	r0, [r2, #0]
 8000aa8:	7019      	strb	r1, [r3, #0]
 8000aaa:	4608      	mov	r0, r1
 8000aac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ab0:	4770      	bx	lr

08000ab2 <__sfputs_r>:
 8000ab2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ab4:	4606      	mov	r6, r0
 8000ab6:	460f      	mov	r7, r1
 8000ab8:	4614      	mov	r4, r2
 8000aba:	18d5      	adds	r5, r2, r3
 8000abc:	42ac      	cmp	r4, r5
 8000abe:	d101      	bne.n	8000ac4 <__sfputs_r+0x12>
 8000ac0:	2000      	movs	r0, #0
 8000ac2:	e007      	b.n	8000ad4 <__sfputs_r+0x22>
 8000ac4:	463a      	mov	r2, r7
 8000ac6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aca:	4630      	mov	r0, r6
 8000acc:	f7ff ffda 	bl	8000a84 <__sfputc_r>
 8000ad0:	1c43      	adds	r3, r0, #1
 8000ad2:	d1f3      	bne.n	8000abc <__sfputs_r+0xa>
 8000ad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ad8 <_vfiprintf_r>:
 8000ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000adc:	460c      	mov	r4, r1
 8000ade:	b09d      	sub	sp, #116	; 0x74
 8000ae0:	4617      	mov	r7, r2
 8000ae2:	461d      	mov	r5, r3
 8000ae4:	4606      	mov	r6, r0
 8000ae6:	b118      	cbz	r0, 8000af0 <_vfiprintf_r+0x18>
 8000ae8:	6983      	ldr	r3, [r0, #24]
 8000aea:	b90b      	cbnz	r3, 8000af0 <_vfiprintf_r+0x18>
 8000aec:	f7ff fe90 	bl	8000810 <__sinit>
 8000af0:	4b7c      	ldr	r3, [pc, #496]	; (8000ce4 <_vfiprintf_r+0x20c>)
 8000af2:	429c      	cmp	r4, r3
 8000af4:	d158      	bne.n	8000ba8 <_vfiprintf_r+0xd0>
 8000af6:	6874      	ldr	r4, [r6, #4]
 8000af8:	89a3      	ldrh	r3, [r4, #12]
 8000afa:	0718      	lsls	r0, r3, #28
 8000afc:	d55e      	bpl.n	8000bbc <_vfiprintf_r+0xe4>
 8000afe:	6923      	ldr	r3, [r4, #16]
 8000b00:	2b00      	cmp	r3, #0
 8000b02:	d05b      	beq.n	8000bbc <_vfiprintf_r+0xe4>
 8000b04:	2300      	movs	r3, #0
 8000b06:	9309      	str	r3, [sp, #36]	; 0x24
 8000b08:	2320      	movs	r3, #32
 8000b0a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b0e:	2330      	movs	r3, #48	; 0x30
 8000b10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b14:	9503      	str	r5, [sp, #12]
 8000b16:	f04f 0b01 	mov.w	fp, #1
 8000b1a:	46b8      	mov	r8, r7
 8000b1c:	4645      	mov	r5, r8
 8000b1e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000b22:	b10b      	cbz	r3, 8000b28 <_vfiprintf_r+0x50>
 8000b24:	2b25      	cmp	r3, #37	; 0x25
 8000b26:	d154      	bne.n	8000bd2 <_vfiprintf_r+0xfa>
 8000b28:	ebb8 0a07 	subs.w	sl, r8, r7
 8000b2c:	d00b      	beq.n	8000b46 <_vfiprintf_r+0x6e>
 8000b2e:	4653      	mov	r3, sl
 8000b30:	463a      	mov	r2, r7
 8000b32:	4621      	mov	r1, r4
 8000b34:	4630      	mov	r0, r6
 8000b36:	f7ff ffbc 	bl	8000ab2 <__sfputs_r>
 8000b3a:	3001      	adds	r0, #1
 8000b3c:	f000 80c2 	beq.w	8000cc4 <_vfiprintf_r+0x1ec>
 8000b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b42:	4453      	add	r3, sl
 8000b44:	9309      	str	r3, [sp, #36]	; 0x24
 8000b46:	f898 3000 	ldrb.w	r3, [r8]
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	f000 80ba 	beq.w	8000cc4 <_vfiprintf_r+0x1ec>
 8000b50:	2300      	movs	r3, #0
 8000b52:	f04f 32ff 	mov.w	r2, #4294967295
 8000b56:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b5a:	9304      	str	r3, [sp, #16]
 8000b5c:	9307      	str	r3, [sp, #28]
 8000b5e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b62:	931a      	str	r3, [sp, #104]	; 0x68
 8000b64:	46a8      	mov	r8, r5
 8000b66:	2205      	movs	r2, #5
 8000b68:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000b6c:	485e      	ldr	r0, [pc, #376]	; (8000ce8 <_vfiprintf_r+0x210>)
 8000b6e:	f7ff fb3f 	bl	80001f0 <memchr>
 8000b72:	9b04      	ldr	r3, [sp, #16]
 8000b74:	bb78      	cbnz	r0, 8000bd6 <_vfiprintf_r+0xfe>
 8000b76:	06d9      	lsls	r1, r3, #27
 8000b78:	bf44      	itt	mi
 8000b7a:	2220      	movmi	r2, #32
 8000b7c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000b80:	071a      	lsls	r2, r3, #28
 8000b82:	bf44      	itt	mi
 8000b84:	222b      	movmi	r2, #43	; 0x2b
 8000b86:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000b8a:	782a      	ldrb	r2, [r5, #0]
 8000b8c:	2a2a      	cmp	r2, #42	; 0x2a
 8000b8e:	d02a      	beq.n	8000be6 <_vfiprintf_r+0x10e>
 8000b90:	9a07      	ldr	r2, [sp, #28]
 8000b92:	46a8      	mov	r8, r5
 8000b94:	2000      	movs	r0, #0
 8000b96:	250a      	movs	r5, #10
 8000b98:	4641      	mov	r1, r8
 8000b9a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b9e:	3b30      	subs	r3, #48	; 0x30
 8000ba0:	2b09      	cmp	r3, #9
 8000ba2:	d969      	bls.n	8000c78 <_vfiprintf_r+0x1a0>
 8000ba4:	b360      	cbz	r0, 8000c00 <_vfiprintf_r+0x128>
 8000ba6:	e024      	b.n	8000bf2 <_vfiprintf_r+0x11a>
 8000ba8:	4b50      	ldr	r3, [pc, #320]	; (8000cec <_vfiprintf_r+0x214>)
 8000baa:	429c      	cmp	r4, r3
 8000bac:	d101      	bne.n	8000bb2 <_vfiprintf_r+0xda>
 8000bae:	68b4      	ldr	r4, [r6, #8]
 8000bb0:	e7a2      	b.n	8000af8 <_vfiprintf_r+0x20>
 8000bb2:	4b4f      	ldr	r3, [pc, #316]	; (8000cf0 <_vfiprintf_r+0x218>)
 8000bb4:	429c      	cmp	r4, r3
 8000bb6:	bf08      	it	eq
 8000bb8:	68f4      	ldreq	r4, [r6, #12]
 8000bba:	e79d      	b.n	8000af8 <_vfiprintf_r+0x20>
 8000bbc:	4621      	mov	r1, r4
 8000bbe:	4630      	mov	r0, r6
 8000bc0:	f000 fb16 	bl	80011f0 <__swsetup_r>
 8000bc4:	2800      	cmp	r0, #0
 8000bc6:	d09d      	beq.n	8000b04 <_vfiprintf_r+0x2c>
 8000bc8:	f04f 30ff 	mov.w	r0, #4294967295
 8000bcc:	b01d      	add	sp, #116	; 0x74
 8000bce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000bd2:	46a8      	mov	r8, r5
 8000bd4:	e7a2      	b.n	8000b1c <_vfiprintf_r+0x44>
 8000bd6:	4a44      	ldr	r2, [pc, #272]	; (8000ce8 <_vfiprintf_r+0x210>)
 8000bd8:	1a80      	subs	r0, r0, r2
 8000bda:	fa0b f000 	lsl.w	r0, fp, r0
 8000bde:	4318      	orrs	r0, r3
 8000be0:	9004      	str	r0, [sp, #16]
 8000be2:	4645      	mov	r5, r8
 8000be4:	e7be      	b.n	8000b64 <_vfiprintf_r+0x8c>
 8000be6:	9a03      	ldr	r2, [sp, #12]
 8000be8:	1d11      	adds	r1, r2, #4
 8000bea:	6812      	ldr	r2, [r2, #0]
 8000bec:	9103      	str	r1, [sp, #12]
 8000bee:	2a00      	cmp	r2, #0
 8000bf0:	db01      	blt.n	8000bf6 <_vfiprintf_r+0x11e>
 8000bf2:	9207      	str	r2, [sp, #28]
 8000bf4:	e004      	b.n	8000c00 <_vfiprintf_r+0x128>
 8000bf6:	4252      	negs	r2, r2
 8000bf8:	f043 0302 	orr.w	r3, r3, #2
 8000bfc:	9207      	str	r2, [sp, #28]
 8000bfe:	9304      	str	r3, [sp, #16]
 8000c00:	f898 3000 	ldrb.w	r3, [r8]
 8000c04:	2b2e      	cmp	r3, #46	; 0x2e
 8000c06:	d10e      	bne.n	8000c26 <_vfiprintf_r+0x14e>
 8000c08:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000c0c:	2b2a      	cmp	r3, #42	; 0x2a
 8000c0e:	d138      	bne.n	8000c82 <_vfiprintf_r+0x1aa>
 8000c10:	9b03      	ldr	r3, [sp, #12]
 8000c12:	1d1a      	adds	r2, r3, #4
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	9203      	str	r2, [sp, #12]
 8000c18:	2b00      	cmp	r3, #0
 8000c1a:	bfb8      	it	lt
 8000c1c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c20:	f108 0802 	add.w	r8, r8, #2
 8000c24:	9305      	str	r3, [sp, #20]
 8000c26:	4d33      	ldr	r5, [pc, #204]	; (8000cf4 <_vfiprintf_r+0x21c>)
 8000c28:	f898 1000 	ldrb.w	r1, [r8]
 8000c2c:	2203      	movs	r2, #3
 8000c2e:	4628      	mov	r0, r5
 8000c30:	f7ff fade 	bl	80001f0 <memchr>
 8000c34:	b140      	cbz	r0, 8000c48 <_vfiprintf_r+0x170>
 8000c36:	2340      	movs	r3, #64	; 0x40
 8000c38:	1b40      	subs	r0, r0, r5
 8000c3a:	fa03 f000 	lsl.w	r0, r3, r0
 8000c3e:	9b04      	ldr	r3, [sp, #16]
 8000c40:	4303      	orrs	r3, r0
 8000c42:	f108 0801 	add.w	r8, r8, #1
 8000c46:	9304      	str	r3, [sp, #16]
 8000c48:	f898 1000 	ldrb.w	r1, [r8]
 8000c4c:	482a      	ldr	r0, [pc, #168]	; (8000cf8 <_vfiprintf_r+0x220>)
 8000c4e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c52:	2206      	movs	r2, #6
 8000c54:	f108 0701 	add.w	r7, r8, #1
 8000c58:	f7ff faca 	bl	80001f0 <memchr>
 8000c5c:	2800      	cmp	r0, #0
 8000c5e:	d037      	beq.n	8000cd0 <_vfiprintf_r+0x1f8>
 8000c60:	4b26      	ldr	r3, [pc, #152]	; (8000cfc <_vfiprintf_r+0x224>)
 8000c62:	bb1b      	cbnz	r3, 8000cac <_vfiprintf_r+0x1d4>
 8000c64:	9b03      	ldr	r3, [sp, #12]
 8000c66:	3307      	adds	r3, #7
 8000c68:	f023 0307 	bic.w	r3, r3, #7
 8000c6c:	3308      	adds	r3, #8
 8000c6e:	9303      	str	r3, [sp, #12]
 8000c70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c72:	444b      	add	r3, r9
 8000c74:	9309      	str	r3, [sp, #36]	; 0x24
 8000c76:	e750      	b.n	8000b1a <_vfiprintf_r+0x42>
 8000c78:	fb05 3202 	mla	r2, r5, r2, r3
 8000c7c:	2001      	movs	r0, #1
 8000c7e:	4688      	mov	r8, r1
 8000c80:	e78a      	b.n	8000b98 <_vfiprintf_r+0xc0>
 8000c82:	2300      	movs	r3, #0
 8000c84:	f108 0801 	add.w	r8, r8, #1
 8000c88:	9305      	str	r3, [sp, #20]
 8000c8a:	4619      	mov	r1, r3
 8000c8c:	250a      	movs	r5, #10
 8000c8e:	4640      	mov	r0, r8
 8000c90:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c94:	3a30      	subs	r2, #48	; 0x30
 8000c96:	2a09      	cmp	r2, #9
 8000c98:	d903      	bls.n	8000ca2 <_vfiprintf_r+0x1ca>
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	d0c3      	beq.n	8000c26 <_vfiprintf_r+0x14e>
 8000c9e:	9105      	str	r1, [sp, #20]
 8000ca0:	e7c1      	b.n	8000c26 <_vfiprintf_r+0x14e>
 8000ca2:	fb05 2101 	mla	r1, r5, r1, r2
 8000ca6:	2301      	movs	r3, #1
 8000ca8:	4680      	mov	r8, r0
 8000caa:	e7f0      	b.n	8000c8e <_vfiprintf_r+0x1b6>
 8000cac:	ab03      	add	r3, sp, #12
 8000cae:	9300      	str	r3, [sp, #0]
 8000cb0:	4622      	mov	r2, r4
 8000cb2:	4b13      	ldr	r3, [pc, #76]	; (8000d00 <_vfiprintf_r+0x228>)
 8000cb4:	a904      	add	r1, sp, #16
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	f3af 8000 	nop.w
 8000cbc:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000cc0:	4681      	mov	r9, r0
 8000cc2:	d1d5      	bne.n	8000c70 <_vfiprintf_r+0x198>
 8000cc4:	89a3      	ldrh	r3, [r4, #12]
 8000cc6:	065b      	lsls	r3, r3, #25
 8000cc8:	f53f af7e 	bmi.w	8000bc8 <_vfiprintf_r+0xf0>
 8000ccc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000cce:	e77d      	b.n	8000bcc <_vfiprintf_r+0xf4>
 8000cd0:	ab03      	add	r3, sp, #12
 8000cd2:	9300      	str	r3, [sp, #0]
 8000cd4:	4622      	mov	r2, r4
 8000cd6:	4b0a      	ldr	r3, [pc, #40]	; (8000d00 <_vfiprintf_r+0x228>)
 8000cd8:	a904      	add	r1, sp, #16
 8000cda:	4630      	mov	r0, r6
 8000cdc:	f000 f888 	bl	8000df0 <_printf_i>
 8000ce0:	e7ec      	b.n	8000cbc <_vfiprintf_r+0x1e4>
 8000ce2:	bf00      	nop
 8000ce4:	0800163c 	.word	0x0800163c
 8000ce8:	0800167c 	.word	0x0800167c
 8000cec:	0800165c 	.word	0x0800165c
 8000cf0:	0800161c 	.word	0x0800161c
 8000cf4:	08001682 	.word	0x08001682
 8000cf8:	08001686 	.word	0x08001686
 8000cfc:	00000000 	.word	0x00000000
 8000d00:	08000ab3 	.word	0x08000ab3

08000d04 <_printf_common>:
 8000d04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d08:	4691      	mov	r9, r2
 8000d0a:	461f      	mov	r7, r3
 8000d0c:	688a      	ldr	r2, [r1, #8]
 8000d0e:	690b      	ldr	r3, [r1, #16]
 8000d10:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d14:	4293      	cmp	r3, r2
 8000d16:	bfb8      	it	lt
 8000d18:	4613      	movlt	r3, r2
 8000d1a:	f8c9 3000 	str.w	r3, [r9]
 8000d1e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d22:	4606      	mov	r6, r0
 8000d24:	460c      	mov	r4, r1
 8000d26:	b112      	cbz	r2, 8000d2e <_printf_common+0x2a>
 8000d28:	3301      	adds	r3, #1
 8000d2a:	f8c9 3000 	str.w	r3, [r9]
 8000d2e:	6823      	ldr	r3, [r4, #0]
 8000d30:	0699      	lsls	r1, r3, #26
 8000d32:	bf42      	ittt	mi
 8000d34:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000d38:	3302      	addmi	r3, #2
 8000d3a:	f8c9 3000 	strmi.w	r3, [r9]
 8000d3e:	6825      	ldr	r5, [r4, #0]
 8000d40:	f015 0506 	ands.w	r5, r5, #6
 8000d44:	d107      	bne.n	8000d56 <_printf_common+0x52>
 8000d46:	f104 0a19 	add.w	sl, r4, #25
 8000d4a:	68e3      	ldr	r3, [r4, #12]
 8000d4c:	f8d9 2000 	ldr.w	r2, [r9]
 8000d50:	1a9b      	subs	r3, r3, r2
 8000d52:	42ab      	cmp	r3, r5
 8000d54:	dc28      	bgt.n	8000da8 <_printf_common+0xa4>
 8000d56:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000d5a:	6822      	ldr	r2, [r4, #0]
 8000d5c:	3300      	adds	r3, #0
 8000d5e:	bf18      	it	ne
 8000d60:	2301      	movne	r3, #1
 8000d62:	0692      	lsls	r2, r2, #26
 8000d64:	d42d      	bmi.n	8000dc2 <_printf_common+0xbe>
 8000d66:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d6a:	4639      	mov	r1, r7
 8000d6c:	4630      	mov	r0, r6
 8000d6e:	47c0      	blx	r8
 8000d70:	3001      	adds	r0, #1
 8000d72:	d020      	beq.n	8000db6 <_printf_common+0xb2>
 8000d74:	6823      	ldr	r3, [r4, #0]
 8000d76:	68e5      	ldr	r5, [r4, #12]
 8000d78:	f8d9 2000 	ldr.w	r2, [r9]
 8000d7c:	f003 0306 	and.w	r3, r3, #6
 8000d80:	2b04      	cmp	r3, #4
 8000d82:	bf08      	it	eq
 8000d84:	1aad      	subeq	r5, r5, r2
 8000d86:	68a3      	ldr	r3, [r4, #8]
 8000d88:	6922      	ldr	r2, [r4, #16]
 8000d8a:	bf0c      	ite	eq
 8000d8c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d90:	2500      	movne	r5, #0
 8000d92:	4293      	cmp	r3, r2
 8000d94:	bfc4      	itt	gt
 8000d96:	1a9b      	subgt	r3, r3, r2
 8000d98:	18ed      	addgt	r5, r5, r3
 8000d9a:	f04f 0900 	mov.w	r9, #0
 8000d9e:	341a      	adds	r4, #26
 8000da0:	454d      	cmp	r5, r9
 8000da2:	d11a      	bne.n	8000dda <_printf_common+0xd6>
 8000da4:	2000      	movs	r0, #0
 8000da6:	e008      	b.n	8000dba <_printf_common+0xb6>
 8000da8:	2301      	movs	r3, #1
 8000daa:	4652      	mov	r2, sl
 8000dac:	4639      	mov	r1, r7
 8000dae:	4630      	mov	r0, r6
 8000db0:	47c0      	blx	r8
 8000db2:	3001      	adds	r0, #1
 8000db4:	d103      	bne.n	8000dbe <_printf_common+0xba>
 8000db6:	f04f 30ff 	mov.w	r0, #4294967295
 8000dba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dbe:	3501      	adds	r5, #1
 8000dc0:	e7c3      	b.n	8000d4a <_printf_common+0x46>
 8000dc2:	18e1      	adds	r1, r4, r3
 8000dc4:	1c5a      	adds	r2, r3, #1
 8000dc6:	2030      	movs	r0, #48	; 0x30
 8000dc8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000dcc:	4422      	add	r2, r4
 8000dce:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000dd2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000dd6:	3302      	adds	r3, #2
 8000dd8:	e7c5      	b.n	8000d66 <_printf_common+0x62>
 8000dda:	2301      	movs	r3, #1
 8000ddc:	4622      	mov	r2, r4
 8000dde:	4639      	mov	r1, r7
 8000de0:	4630      	mov	r0, r6
 8000de2:	47c0      	blx	r8
 8000de4:	3001      	adds	r0, #1
 8000de6:	d0e6      	beq.n	8000db6 <_printf_common+0xb2>
 8000de8:	f109 0901 	add.w	r9, r9, #1
 8000dec:	e7d8      	b.n	8000da0 <_printf_common+0x9c>
	...

08000df0 <_printf_i>:
 8000df0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000df4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000df8:	460c      	mov	r4, r1
 8000dfa:	7e09      	ldrb	r1, [r1, #24]
 8000dfc:	b085      	sub	sp, #20
 8000dfe:	296e      	cmp	r1, #110	; 0x6e
 8000e00:	4617      	mov	r7, r2
 8000e02:	4606      	mov	r6, r0
 8000e04:	4698      	mov	r8, r3
 8000e06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000e08:	f000 80b3 	beq.w	8000f72 <_printf_i+0x182>
 8000e0c:	d822      	bhi.n	8000e54 <_printf_i+0x64>
 8000e0e:	2963      	cmp	r1, #99	; 0x63
 8000e10:	d036      	beq.n	8000e80 <_printf_i+0x90>
 8000e12:	d80a      	bhi.n	8000e2a <_printf_i+0x3a>
 8000e14:	2900      	cmp	r1, #0
 8000e16:	f000 80b9 	beq.w	8000f8c <_printf_i+0x19c>
 8000e1a:	2958      	cmp	r1, #88	; 0x58
 8000e1c:	f000 8083 	beq.w	8000f26 <_printf_i+0x136>
 8000e20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e24:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000e28:	e032      	b.n	8000e90 <_printf_i+0xa0>
 8000e2a:	2964      	cmp	r1, #100	; 0x64
 8000e2c:	d001      	beq.n	8000e32 <_printf_i+0x42>
 8000e2e:	2969      	cmp	r1, #105	; 0x69
 8000e30:	d1f6      	bne.n	8000e20 <_printf_i+0x30>
 8000e32:	6820      	ldr	r0, [r4, #0]
 8000e34:	6813      	ldr	r3, [r2, #0]
 8000e36:	0605      	lsls	r5, r0, #24
 8000e38:	f103 0104 	add.w	r1, r3, #4
 8000e3c:	d52a      	bpl.n	8000e94 <_printf_i+0xa4>
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	6011      	str	r1, [r2, #0]
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	da03      	bge.n	8000e4e <_printf_i+0x5e>
 8000e46:	222d      	movs	r2, #45	; 0x2d
 8000e48:	425b      	negs	r3, r3
 8000e4a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000e4e:	486f      	ldr	r0, [pc, #444]	; (800100c <_printf_i+0x21c>)
 8000e50:	220a      	movs	r2, #10
 8000e52:	e039      	b.n	8000ec8 <_printf_i+0xd8>
 8000e54:	2973      	cmp	r1, #115	; 0x73
 8000e56:	f000 809d 	beq.w	8000f94 <_printf_i+0x1a4>
 8000e5a:	d808      	bhi.n	8000e6e <_printf_i+0x7e>
 8000e5c:	296f      	cmp	r1, #111	; 0x6f
 8000e5e:	d020      	beq.n	8000ea2 <_printf_i+0xb2>
 8000e60:	2970      	cmp	r1, #112	; 0x70
 8000e62:	d1dd      	bne.n	8000e20 <_printf_i+0x30>
 8000e64:	6823      	ldr	r3, [r4, #0]
 8000e66:	f043 0320 	orr.w	r3, r3, #32
 8000e6a:	6023      	str	r3, [r4, #0]
 8000e6c:	e003      	b.n	8000e76 <_printf_i+0x86>
 8000e6e:	2975      	cmp	r1, #117	; 0x75
 8000e70:	d017      	beq.n	8000ea2 <_printf_i+0xb2>
 8000e72:	2978      	cmp	r1, #120	; 0x78
 8000e74:	d1d4      	bne.n	8000e20 <_printf_i+0x30>
 8000e76:	2378      	movs	r3, #120	; 0x78
 8000e78:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e7c:	4864      	ldr	r0, [pc, #400]	; (8001010 <_printf_i+0x220>)
 8000e7e:	e055      	b.n	8000f2c <_printf_i+0x13c>
 8000e80:	6813      	ldr	r3, [r2, #0]
 8000e82:	1d19      	adds	r1, r3, #4
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	6011      	str	r1, [r2, #0]
 8000e88:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e8c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e90:	2301      	movs	r3, #1
 8000e92:	e08c      	b.n	8000fae <_printf_i+0x1be>
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	6011      	str	r1, [r2, #0]
 8000e98:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e9c:	bf18      	it	ne
 8000e9e:	b21b      	sxthne	r3, r3
 8000ea0:	e7cf      	b.n	8000e42 <_printf_i+0x52>
 8000ea2:	6813      	ldr	r3, [r2, #0]
 8000ea4:	6825      	ldr	r5, [r4, #0]
 8000ea6:	1d18      	adds	r0, r3, #4
 8000ea8:	6010      	str	r0, [r2, #0]
 8000eaa:	0628      	lsls	r0, r5, #24
 8000eac:	d501      	bpl.n	8000eb2 <_printf_i+0xc2>
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	e002      	b.n	8000eb8 <_printf_i+0xc8>
 8000eb2:	0668      	lsls	r0, r5, #25
 8000eb4:	d5fb      	bpl.n	8000eae <_printf_i+0xbe>
 8000eb6:	881b      	ldrh	r3, [r3, #0]
 8000eb8:	4854      	ldr	r0, [pc, #336]	; (800100c <_printf_i+0x21c>)
 8000eba:	296f      	cmp	r1, #111	; 0x6f
 8000ebc:	bf14      	ite	ne
 8000ebe:	220a      	movne	r2, #10
 8000ec0:	2208      	moveq	r2, #8
 8000ec2:	2100      	movs	r1, #0
 8000ec4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ec8:	6865      	ldr	r5, [r4, #4]
 8000eca:	60a5      	str	r5, [r4, #8]
 8000ecc:	2d00      	cmp	r5, #0
 8000ece:	f2c0 8095 	blt.w	8000ffc <_printf_i+0x20c>
 8000ed2:	6821      	ldr	r1, [r4, #0]
 8000ed4:	f021 0104 	bic.w	r1, r1, #4
 8000ed8:	6021      	str	r1, [r4, #0]
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d13d      	bne.n	8000f5a <_printf_i+0x16a>
 8000ede:	2d00      	cmp	r5, #0
 8000ee0:	f040 808e 	bne.w	8001000 <_printf_i+0x210>
 8000ee4:	4665      	mov	r5, ip
 8000ee6:	2a08      	cmp	r2, #8
 8000ee8:	d10b      	bne.n	8000f02 <_printf_i+0x112>
 8000eea:	6823      	ldr	r3, [r4, #0]
 8000eec:	07db      	lsls	r3, r3, #31
 8000eee:	d508      	bpl.n	8000f02 <_printf_i+0x112>
 8000ef0:	6923      	ldr	r3, [r4, #16]
 8000ef2:	6862      	ldr	r2, [r4, #4]
 8000ef4:	429a      	cmp	r2, r3
 8000ef6:	bfde      	ittt	le
 8000ef8:	2330      	movle	r3, #48	; 0x30
 8000efa:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000efe:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f02:	ebac 0305 	sub.w	r3, ip, r5
 8000f06:	6123      	str	r3, [r4, #16]
 8000f08:	f8cd 8000 	str.w	r8, [sp]
 8000f0c:	463b      	mov	r3, r7
 8000f0e:	aa03      	add	r2, sp, #12
 8000f10:	4621      	mov	r1, r4
 8000f12:	4630      	mov	r0, r6
 8000f14:	f7ff fef6 	bl	8000d04 <_printf_common>
 8000f18:	3001      	adds	r0, #1
 8000f1a:	d14d      	bne.n	8000fb8 <_printf_i+0x1c8>
 8000f1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f20:	b005      	add	sp, #20
 8000f22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000f26:	4839      	ldr	r0, [pc, #228]	; (800100c <_printf_i+0x21c>)
 8000f28:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000f2c:	6813      	ldr	r3, [r2, #0]
 8000f2e:	6821      	ldr	r1, [r4, #0]
 8000f30:	1d1d      	adds	r5, r3, #4
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	6015      	str	r5, [r2, #0]
 8000f36:	060a      	lsls	r2, r1, #24
 8000f38:	d50b      	bpl.n	8000f52 <_printf_i+0x162>
 8000f3a:	07ca      	lsls	r2, r1, #31
 8000f3c:	bf44      	itt	mi
 8000f3e:	f041 0120 	orrmi.w	r1, r1, #32
 8000f42:	6021      	strmi	r1, [r4, #0]
 8000f44:	b91b      	cbnz	r3, 8000f4e <_printf_i+0x15e>
 8000f46:	6822      	ldr	r2, [r4, #0]
 8000f48:	f022 0220 	bic.w	r2, r2, #32
 8000f4c:	6022      	str	r2, [r4, #0]
 8000f4e:	2210      	movs	r2, #16
 8000f50:	e7b7      	b.n	8000ec2 <_printf_i+0xd2>
 8000f52:	064d      	lsls	r5, r1, #25
 8000f54:	bf48      	it	mi
 8000f56:	b29b      	uxthmi	r3, r3
 8000f58:	e7ef      	b.n	8000f3a <_printf_i+0x14a>
 8000f5a:	4665      	mov	r5, ip
 8000f5c:	fbb3 f1f2 	udiv	r1, r3, r2
 8000f60:	fb02 3311 	mls	r3, r2, r1, r3
 8000f64:	5cc3      	ldrb	r3, [r0, r3]
 8000f66:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000f6a:	460b      	mov	r3, r1
 8000f6c:	2900      	cmp	r1, #0
 8000f6e:	d1f5      	bne.n	8000f5c <_printf_i+0x16c>
 8000f70:	e7b9      	b.n	8000ee6 <_printf_i+0xf6>
 8000f72:	6813      	ldr	r3, [r2, #0]
 8000f74:	6825      	ldr	r5, [r4, #0]
 8000f76:	6961      	ldr	r1, [r4, #20]
 8000f78:	1d18      	adds	r0, r3, #4
 8000f7a:	6010      	str	r0, [r2, #0]
 8000f7c:	0628      	lsls	r0, r5, #24
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	d501      	bpl.n	8000f86 <_printf_i+0x196>
 8000f82:	6019      	str	r1, [r3, #0]
 8000f84:	e002      	b.n	8000f8c <_printf_i+0x19c>
 8000f86:	066a      	lsls	r2, r5, #25
 8000f88:	d5fb      	bpl.n	8000f82 <_printf_i+0x192>
 8000f8a:	8019      	strh	r1, [r3, #0]
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	6123      	str	r3, [r4, #16]
 8000f90:	4665      	mov	r5, ip
 8000f92:	e7b9      	b.n	8000f08 <_printf_i+0x118>
 8000f94:	6813      	ldr	r3, [r2, #0]
 8000f96:	1d19      	adds	r1, r3, #4
 8000f98:	6011      	str	r1, [r2, #0]
 8000f9a:	681d      	ldr	r5, [r3, #0]
 8000f9c:	6862      	ldr	r2, [r4, #4]
 8000f9e:	2100      	movs	r1, #0
 8000fa0:	4628      	mov	r0, r5
 8000fa2:	f7ff f925 	bl	80001f0 <memchr>
 8000fa6:	b108      	cbz	r0, 8000fac <_printf_i+0x1bc>
 8000fa8:	1b40      	subs	r0, r0, r5
 8000faa:	6060      	str	r0, [r4, #4]
 8000fac:	6863      	ldr	r3, [r4, #4]
 8000fae:	6123      	str	r3, [r4, #16]
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fb6:	e7a7      	b.n	8000f08 <_printf_i+0x118>
 8000fb8:	6923      	ldr	r3, [r4, #16]
 8000fba:	462a      	mov	r2, r5
 8000fbc:	4639      	mov	r1, r7
 8000fbe:	4630      	mov	r0, r6
 8000fc0:	47c0      	blx	r8
 8000fc2:	3001      	adds	r0, #1
 8000fc4:	d0aa      	beq.n	8000f1c <_printf_i+0x12c>
 8000fc6:	6823      	ldr	r3, [r4, #0]
 8000fc8:	079b      	lsls	r3, r3, #30
 8000fca:	d413      	bmi.n	8000ff4 <_printf_i+0x204>
 8000fcc:	68e0      	ldr	r0, [r4, #12]
 8000fce:	9b03      	ldr	r3, [sp, #12]
 8000fd0:	4298      	cmp	r0, r3
 8000fd2:	bfb8      	it	lt
 8000fd4:	4618      	movlt	r0, r3
 8000fd6:	e7a3      	b.n	8000f20 <_printf_i+0x130>
 8000fd8:	2301      	movs	r3, #1
 8000fda:	464a      	mov	r2, r9
 8000fdc:	4639      	mov	r1, r7
 8000fde:	4630      	mov	r0, r6
 8000fe0:	47c0      	blx	r8
 8000fe2:	3001      	adds	r0, #1
 8000fe4:	d09a      	beq.n	8000f1c <_printf_i+0x12c>
 8000fe6:	3501      	adds	r5, #1
 8000fe8:	68e3      	ldr	r3, [r4, #12]
 8000fea:	9a03      	ldr	r2, [sp, #12]
 8000fec:	1a9b      	subs	r3, r3, r2
 8000fee:	42ab      	cmp	r3, r5
 8000ff0:	dcf2      	bgt.n	8000fd8 <_printf_i+0x1e8>
 8000ff2:	e7eb      	b.n	8000fcc <_printf_i+0x1dc>
 8000ff4:	2500      	movs	r5, #0
 8000ff6:	f104 0919 	add.w	r9, r4, #25
 8000ffa:	e7f5      	b.n	8000fe8 <_printf_i+0x1f8>
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	d1ac      	bne.n	8000f5a <_printf_i+0x16a>
 8001000:	7803      	ldrb	r3, [r0, #0]
 8001002:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001006:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800100a:	e76c      	b.n	8000ee6 <_printf_i+0xf6>
 800100c:	0800168d 	.word	0x0800168d
 8001010:	0800169e 	.word	0x0800169e

08001014 <_putc_r>:
 8001014:	b570      	push	{r4, r5, r6, lr}
 8001016:	460d      	mov	r5, r1
 8001018:	4614      	mov	r4, r2
 800101a:	4606      	mov	r6, r0
 800101c:	b118      	cbz	r0, 8001026 <_putc_r+0x12>
 800101e:	6983      	ldr	r3, [r0, #24]
 8001020:	b90b      	cbnz	r3, 8001026 <_putc_r+0x12>
 8001022:	f7ff fbf5 	bl	8000810 <__sinit>
 8001026:	4b13      	ldr	r3, [pc, #76]	; (8001074 <_putc_r+0x60>)
 8001028:	429c      	cmp	r4, r3
 800102a:	d112      	bne.n	8001052 <_putc_r+0x3e>
 800102c:	6874      	ldr	r4, [r6, #4]
 800102e:	68a3      	ldr	r3, [r4, #8]
 8001030:	3b01      	subs	r3, #1
 8001032:	2b00      	cmp	r3, #0
 8001034:	60a3      	str	r3, [r4, #8]
 8001036:	da16      	bge.n	8001066 <_putc_r+0x52>
 8001038:	69a2      	ldr	r2, [r4, #24]
 800103a:	4293      	cmp	r3, r2
 800103c:	db02      	blt.n	8001044 <_putc_r+0x30>
 800103e:	b2eb      	uxtb	r3, r5
 8001040:	2b0a      	cmp	r3, #10
 8001042:	d110      	bne.n	8001066 <_putc_r+0x52>
 8001044:	4622      	mov	r2, r4
 8001046:	4629      	mov	r1, r5
 8001048:	4630      	mov	r0, r6
 800104a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800104e:	f000 b86b 	b.w	8001128 <__swbuf_r>
 8001052:	4b09      	ldr	r3, [pc, #36]	; (8001078 <_putc_r+0x64>)
 8001054:	429c      	cmp	r4, r3
 8001056:	d101      	bne.n	800105c <_putc_r+0x48>
 8001058:	68b4      	ldr	r4, [r6, #8]
 800105a:	e7e8      	b.n	800102e <_putc_r+0x1a>
 800105c:	4b07      	ldr	r3, [pc, #28]	; (800107c <_putc_r+0x68>)
 800105e:	429c      	cmp	r4, r3
 8001060:	bf08      	it	eq
 8001062:	68f4      	ldreq	r4, [r6, #12]
 8001064:	e7e3      	b.n	800102e <_putc_r+0x1a>
 8001066:	6823      	ldr	r3, [r4, #0]
 8001068:	1c5a      	adds	r2, r3, #1
 800106a:	6022      	str	r2, [r4, #0]
 800106c:	701d      	strb	r5, [r3, #0]
 800106e:	b2e8      	uxtb	r0, r5
 8001070:	bd70      	pop	{r4, r5, r6, pc}
 8001072:	bf00      	nop
 8001074:	0800163c 	.word	0x0800163c
 8001078:	0800165c 	.word	0x0800165c
 800107c:	0800161c 	.word	0x0800161c

08001080 <_sbrk_r>:
 8001080:	b538      	push	{r3, r4, r5, lr}
 8001082:	4c06      	ldr	r4, [pc, #24]	; (800109c <_sbrk_r+0x1c>)
 8001084:	2300      	movs	r3, #0
 8001086:	4605      	mov	r5, r0
 8001088:	4608      	mov	r0, r1
 800108a:	6023      	str	r3, [r4, #0]
 800108c:	f7ff fa98 	bl	80005c0 <_sbrk>
 8001090:	1c43      	adds	r3, r0, #1
 8001092:	d102      	bne.n	800109a <_sbrk_r+0x1a>
 8001094:	6823      	ldr	r3, [r4, #0]
 8001096:	b103      	cbz	r3, 800109a <_sbrk_r+0x1a>
 8001098:	602b      	str	r3, [r5, #0]
 800109a:	bd38      	pop	{r3, r4, r5, pc}
 800109c:	200000d4 	.word	0x200000d4

080010a0 <__sread>:
 80010a0:	b510      	push	{r4, lr}
 80010a2:	460c      	mov	r4, r1
 80010a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010a8:	f000 fa48 	bl	800153c <_read_r>
 80010ac:	2800      	cmp	r0, #0
 80010ae:	bfab      	itete	ge
 80010b0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80010b2:	89a3      	ldrhlt	r3, [r4, #12]
 80010b4:	181b      	addge	r3, r3, r0
 80010b6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80010ba:	bfac      	ite	ge
 80010bc:	6563      	strge	r3, [r4, #84]	; 0x54
 80010be:	81a3      	strhlt	r3, [r4, #12]
 80010c0:	bd10      	pop	{r4, pc}

080010c2 <__swrite>:
 80010c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010c6:	461f      	mov	r7, r3
 80010c8:	898b      	ldrh	r3, [r1, #12]
 80010ca:	05db      	lsls	r3, r3, #23
 80010cc:	4605      	mov	r5, r0
 80010ce:	460c      	mov	r4, r1
 80010d0:	4616      	mov	r6, r2
 80010d2:	d505      	bpl.n	80010e0 <__swrite+0x1e>
 80010d4:	2302      	movs	r3, #2
 80010d6:	2200      	movs	r2, #0
 80010d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010dc:	f000 f9b6 	bl	800144c <_lseek_r>
 80010e0:	89a3      	ldrh	r3, [r4, #12]
 80010e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80010e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80010ea:	81a3      	strh	r3, [r4, #12]
 80010ec:	4632      	mov	r2, r6
 80010ee:	463b      	mov	r3, r7
 80010f0:	4628      	mov	r0, r5
 80010f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010f6:	f000 b869 	b.w	80011cc <_write_r>

080010fa <__sseek>:
 80010fa:	b510      	push	{r4, lr}
 80010fc:	460c      	mov	r4, r1
 80010fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001102:	f000 f9a3 	bl	800144c <_lseek_r>
 8001106:	1c43      	adds	r3, r0, #1
 8001108:	89a3      	ldrh	r3, [r4, #12]
 800110a:	bf15      	itete	ne
 800110c:	6560      	strne	r0, [r4, #84]	; 0x54
 800110e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001112:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001116:	81a3      	strheq	r3, [r4, #12]
 8001118:	bf18      	it	ne
 800111a:	81a3      	strhne	r3, [r4, #12]
 800111c:	bd10      	pop	{r4, pc}

0800111e <__sclose>:
 800111e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001122:	f000 b8d3 	b.w	80012cc <_close_r>
	...

08001128 <__swbuf_r>:
 8001128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800112a:	460e      	mov	r6, r1
 800112c:	4614      	mov	r4, r2
 800112e:	4605      	mov	r5, r0
 8001130:	b118      	cbz	r0, 800113a <__swbuf_r+0x12>
 8001132:	6983      	ldr	r3, [r0, #24]
 8001134:	b90b      	cbnz	r3, 800113a <__swbuf_r+0x12>
 8001136:	f7ff fb6b 	bl	8000810 <__sinit>
 800113a:	4b21      	ldr	r3, [pc, #132]	; (80011c0 <__swbuf_r+0x98>)
 800113c:	429c      	cmp	r4, r3
 800113e:	d12a      	bne.n	8001196 <__swbuf_r+0x6e>
 8001140:	686c      	ldr	r4, [r5, #4]
 8001142:	69a3      	ldr	r3, [r4, #24]
 8001144:	60a3      	str	r3, [r4, #8]
 8001146:	89a3      	ldrh	r3, [r4, #12]
 8001148:	071a      	lsls	r2, r3, #28
 800114a:	d52e      	bpl.n	80011aa <__swbuf_r+0x82>
 800114c:	6923      	ldr	r3, [r4, #16]
 800114e:	b363      	cbz	r3, 80011aa <__swbuf_r+0x82>
 8001150:	6923      	ldr	r3, [r4, #16]
 8001152:	6820      	ldr	r0, [r4, #0]
 8001154:	1ac0      	subs	r0, r0, r3
 8001156:	6963      	ldr	r3, [r4, #20]
 8001158:	b2f6      	uxtb	r6, r6
 800115a:	4283      	cmp	r3, r0
 800115c:	4637      	mov	r7, r6
 800115e:	dc04      	bgt.n	800116a <__swbuf_r+0x42>
 8001160:	4621      	mov	r1, r4
 8001162:	4628      	mov	r0, r5
 8001164:	f000 f948 	bl	80013f8 <_fflush_r>
 8001168:	bb28      	cbnz	r0, 80011b6 <__swbuf_r+0x8e>
 800116a:	68a3      	ldr	r3, [r4, #8]
 800116c:	3b01      	subs	r3, #1
 800116e:	60a3      	str	r3, [r4, #8]
 8001170:	6823      	ldr	r3, [r4, #0]
 8001172:	1c5a      	adds	r2, r3, #1
 8001174:	6022      	str	r2, [r4, #0]
 8001176:	701e      	strb	r6, [r3, #0]
 8001178:	6963      	ldr	r3, [r4, #20]
 800117a:	3001      	adds	r0, #1
 800117c:	4283      	cmp	r3, r0
 800117e:	d004      	beq.n	800118a <__swbuf_r+0x62>
 8001180:	89a3      	ldrh	r3, [r4, #12]
 8001182:	07db      	lsls	r3, r3, #31
 8001184:	d519      	bpl.n	80011ba <__swbuf_r+0x92>
 8001186:	2e0a      	cmp	r6, #10
 8001188:	d117      	bne.n	80011ba <__swbuf_r+0x92>
 800118a:	4621      	mov	r1, r4
 800118c:	4628      	mov	r0, r5
 800118e:	f000 f933 	bl	80013f8 <_fflush_r>
 8001192:	b190      	cbz	r0, 80011ba <__swbuf_r+0x92>
 8001194:	e00f      	b.n	80011b6 <__swbuf_r+0x8e>
 8001196:	4b0b      	ldr	r3, [pc, #44]	; (80011c4 <__swbuf_r+0x9c>)
 8001198:	429c      	cmp	r4, r3
 800119a:	d101      	bne.n	80011a0 <__swbuf_r+0x78>
 800119c:	68ac      	ldr	r4, [r5, #8]
 800119e:	e7d0      	b.n	8001142 <__swbuf_r+0x1a>
 80011a0:	4b09      	ldr	r3, [pc, #36]	; (80011c8 <__swbuf_r+0xa0>)
 80011a2:	429c      	cmp	r4, r3
 80011a4:	bf08      	it	eq
 80011a6:	68ec      	ldreq	r4, [r5, #12]
 80011a8:	e7cb      	b.n	8001142 <__swbuf_r+0x1a>
 80011aa:	4621      	mov	r1, r4
 80011ac:	4628      	mov	r0, r5
 80011ae:	f000 f81f 	bl	80011f0 <__swsetup_r>
 80011b2:	2800      	cmp	r0, #0
 80011b4:	d0cc      	beq.n	8001150 <__swbuf_r+0x28>
 80011b6:	f04f 37ff 	mov.w	r7, #4294967295
 80011ba:	4638      	mov	r0, r7
 80011bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011be:	bf00      	nop
 80011c0:	0800163c 	.word	0x0800163c
 80011c4:	0800165c 	.word	0x0800165c
 80011c8:	0800161c 	.word	0x0800161c

080011cc <_write_r>:
 80011cc:	b538      	push	{r3, r4, r5, lr}
 80011ce:	4c07      	ldr	r4, [pc, #28]	; (80011ec <_write_r+0x20>)
 80011d0:	4605      	mov	r5, r0
 80011d2:	4608      	mov	r0, r1
 80011d4:	4611      	mov	r1, r2
 80011d6:	2200      	movs	r2, #0
 80011d8:	6022      	str	r2, [r4, #0]
 80011da:	461a      	mov	r2, r3
 80011dc:	f7ff f99f 	bl	800051e <_write>
 80011e0:	1c43      	adds	r3, r0, #1
 80011e2:	d102      	bne.n	80011ea <_write_r+0x1e>
 80011e4:	6823      	ldr	r3, [r4, #0]
 80011e6:	b103      	cbz	r3, 80011ea <_write_r+0x1e>
 80011e8:	602b      	str	r3, [r5, #0]
 80011ea:	bd38      	pop	{r3, r4, r5, pc}
 80011ec:	200000d4 	.word	0x200000d4

080011f0 <__swsetup_r>:
 80011f0:	4b32      	ldr	r3, [pc, #200]	; (80012bc <__swsetup_r+0xcc>)
 80011f2:	b570      	push	{r4, r5, r6, lr}
 80011f4:	681d      	ldr	r5, [r3, #0]
 80011f6:	4606      	mov	r6, r0
 80011f8:	460c      	mov	r4, r1
 80011fa:	b125      	cbz	r5, 8001206 <__swsetup_r+0x16>
 80011fc:	69ab      	ldr	r3, [r5, #24]
 80011fe:	b913      	cbnz	r3, 8001206 <__swsetup_r+0x16>
 8001200:	4628      	mov	r0, r5
 8001202:	f7ff fb05 	bl	8000810 <__sinit>
 8001206:	4b2e      	ldr	r3, [pc, #184]	; (80012c0 <__swsetup_r+0xd0>)
 8001208:	429c      	cmp	r4, r3
 800120a:	d10f      	bne.n	800122c <__swsetup_r+0x3c>
 800120c:	686c      	ldr	r4, [r5, #4]
 800120e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001212:	b29a      	uxth	r2, r3
 8001214:	0715      	lsls	r5, r2, #28
 8001216:	d42c      	bmi.n	8001272 <__swsetup_r+0x82>
 8001218:	06d0      	lsls	r0, r2, #27
 800121a:	d411      	bmi.n	8001240 <__swsetup_r+0x50>
 800121c:	2209      	movs	r2, #9
 800121e:	6032      	str	r2, [r6, #0]
 8001220:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001224:	81a3      	strh	r3, [r4, #12]
 8001226:	f04f 30ff 	mov.w	r0, #4294967295
 800122a:	e03e      	b.n	80012aa <__swsetup_r+0xba>
 800122c:	4b25      	ldr	r3, [pc, #148]	; (80012c4 <__swsetup_r+0xd4>)
 800122e:	429c      	cmp	r4, r3
 8001230:	d101      	bne.n	8001236 <__swsetup_r+0x46>
 8001232:	68ac      	ldr	r4, [r5, #8]
 8001234:	e7eb      	b.n	800120e <__swsetup_r+0x1e>
 8001236:	4b24      	ldr	r3, [pc, #144]	; (80012c8 <__swsetup_r+0xd8>)
 8001238:	429c      	cmp	r4, r3
 800123a:	bf08      	it	eq
 800123c:	68ec      	ldreq	r4, [r5, #12]
 800123e:	e7e6      	b.n	800120e <__swsetup_r+0x1e>
 8001240:	0751      	lsls	r1, r2, #29
 8001242:	d512      	bpl.n	800126a <__swsetup_r+0x7a>
 8001244:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001246:	b141      	cbz	r1, 800125a <__swsetup_r+0x6a>
 8001248:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800124c:	4299      	cmp	r1, r3
 800124e:	d002      	beq.n	8001256 <__swsetup_r+0x66>
 8001250:	4630      	mov	r0, r6
 8001252:	f7ff fb6f 	bl	8000934 <_free_r>
 8001256:	2300      	movs	r3, #0
 8001258:	6363      	str	r3, [r4, #52]	; 0x34
 800125a:	89a3      	ldrh	r3, [r4, #12]
 800125c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001260:	81a3      	strh	r3, [r4, #12]
 8001262:	2300      	movs	r3, #0
 8001264:	6063      	str	r3, [r4, #4]
 8001266:	6923      	ldr	r3, [r4, #16]
 8001268:	6023      	str	r3, [r4, #0]
 800126a:	89a3      	ldrh	r3, [r4, #12]
 800126c:	f043 0308 	orr.w	r3, r3, #8
 8001270:	81a3      	strh	r3, [r4, #12]
 8001272:	6923      	ldr	r3, [r4, #16]
 8001274:	b94b      	cbnz	r3, 800128a <__swsetup_r+0x9a>
 8001276:	89a3      	ldrh	r3, [r4, #12]
 8001278:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800127c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001280:	d003      	beq.n	800128a <__swsetup_r+0x9a>
 8001282:	4621      	mov	r1, r4
 8001284:	4630      	mov	r0, r6
 8001286:	f000 f917 	bl	80014b8 <__smakebuf_r>
 800128a:	89a2      	ldrh	r2, [r4, #12]
 800128c:	f012 0301 	ands.w	r3, r2, #1
 8001290:	d00c      	beq.n	80012ac <__swsetup_r+0xbc>
 8001292:	2300      	movs	r3, #0
 8001294:	60a3      	str	r3, [r4, #8]
 8001296:	6963      	ldr	r3, [r4, #20]
 8001298:	425b      	negs	r3, r3
 800129a:	61a3      	str	r3, [r4, #24]
 800129c:	6923      	ldr	r3, [r4, #16]
 800129e:	b953      	cbnz	r3, 80012b6 <__swsetup_r+0xc6>
 80012a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012a4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80012a8:	d1ba      	bne.n	8001220 <__swsetup_r+0x30>
 80012aa:	bd70      	pop	{r4, r5, r6, pc}
 80012ac:	0792      	lsls	r2, r2, #30
 80012ae:	bf58      	it	pl
 80012b0:	6963      	ldrpl	r3, [r4, #20]
 80012b2:	60a3      	str	r3, [r4, #8]
 80012b4:	e7f2      	b.n	800129c <__swsetup_r+0xac>
 80012b6:	2000      	movs	r0, #0
 80012b8:	e7f7      	b.n	80012aa <__swsetup_r+0xba>
 80012ba:	bf00      	nop
 80012bc:	20000048 	.word	0x20000048
 80012c0:	0800163c 	.word	0x0800163c
 80012c4:	0800165c 	.word	0x0800165c
 80012c8:	0800161c 	.word	0x0800161c

080012cc <_close_r>:
 80012cc:	b538      	push	{r3, r4, r5, lr}
 80012ce:	4c06      	ldr	r4, [pc, #24]	; (80012e8 <_close_r+0x1c>)
 80012d0:	2300      	movs	r3, #0
 80012d2:	4605      	mov	r5, r0
 80012d4:	4608      	mov	r0, r1
 80012d6:	6023      	str	r3, [r4, #0]
 80012d8:	f7ff f93d 	bl	8000556 <_close>
 80012dc:	1c43      	adds	r3, r0, #1
 80012de:	d102      	bne.n	80012e6 <_close_r+0x1a>
 80012e0:	6823      	ldr	r3, [r4, #0]
 80012e2:	b103      	cbz	r3, 80012e6 <_close_r+0x1a>
 80012e4:	602b      	str	r3, [r5, #0]
 80012e6:	bd38      	pop	{r3, r4, r5, pc}
 80012e8:	200000d4 	.word	0x200000d4

080012ec <__sflush_r>:
 80012ec:	898a      	ldrh	r2, [r1, #12]
 80012ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012f2:	4605      	mov	r5, r0
 80012f4:	0710      	lsls	r0, r2, #28
 80012f6:	460c      	mov	r4, r1
 80012f8:	d458      	bmi.n	80013ac <__sflush_r+0xc0>
 80012fa:	684b      	ldr	r3, [r1, #4]
 80012fc:	2b00      	cmp	r3, #0
 80012fe:	dc05      	bgt.n	800130c <__sflush_r+0x20>
 8001300:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001302:	2b00      	cmp	r3, #0
 8001304:	dc02      	bgt.n	800130c <__sflush_r+0x20>
 8001306:	2000      	movs	r0, #0
 8001308:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800130c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800130e:	2e00      	cmp	r6, #0
 8001310:	d0f9      	beq.n	8001306 <__sflush_r+0x1a>
 8001312:	2300      	movs	r3, #0
 8001314:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001318:	682f      	ldr	r7, [r5, #0]
 800131a:	6a21      	ldr	r1, [r4, #32]
 800131c:	602b      	str	r3, [r5, #0]
 800131e:	d032      	beq.n	8001386 <__sflush_r+0x9a>
 8001320:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001322:	89a3      	ldrh	r3, [r4, #12]
 8001324:	075a      	lsls	r2, r3, #29
 8001326:	d505      	bpl.n	8001334 <__sflush_r+0x48>
 8001328:	6863      	ldr	r3, [r4, #4]
 800132a:	1ac0      	subs	r0, r0, r3
 800132c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800132e:	b10b      	cbz	r3, 8001334 <__sflush_r+0x48>
 8001330:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001332:	1ac0      	subs	r0, r0, r3
 8001334:	2300      	movs	r3, #0
 8001336:	4602      	mov	r2, r0
 8001338:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800133a:	6a21      	ldr	r1, [r4, #32]
 800133c:	4628      	mov	r0, r5
 800133e:	47b0      	blx	r6
 8001340:	1c43      	adds	r3, r0, #1
 8001342:	89a3      	ldrh	r3, [r4, #12]
 8001344:	d106      	bne.n	8001354 <__sflush_r+0x68>
 8001346:	6829      	ldr	r1, [r5, #0]
 8001348:	291d      	cmp	r1, #29
 800134a:	d848      	bhi.n	80013de <__sflush_r+0xf2>
 800134c:	4a29      	ldr	r2, [pc, #164]	; (80013f4 <__sflush_r+0x108>)
 800134e:	40ca      	lsrs	r2, r1
 8001350:	07d6      	lsls	r6, r2, #31
 8001352:	d544      	bpl.n	80013de <__sflush_r+0xf2>
 8001354:	2200      	movs	r2, #0
 8001356:	6062      	str	r2, [r4, #4]
 8001358:	04d9      	lsls	r1, r3, #19
 800135a:	6922      	ldr	r2, [r4, #16]
 800135c:	6022      	str	r2, [r4, #0]
 800135e:	d504      	bpl.n	800136a <__sflush_r+0x7e>
 8001360:	1c42      	adds	r2, r0, #1
 8001362:	d101      	bne.n	8001368 <__sflush_r+0x7c>
 8001364:	682b      	ldr	r3, [r5, #0]
 8001366:	b903      	cbnz	r3, 800136a <__sflush_r+0x7e>
 8001368:	6560      	str	r0, [r4, #84]	; 0x54
 800136a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800136c:	602f      	str	r7, [r5, #0]
 800136e:	2900      	cmp	r1, #0
 8001370:	d0c9      	beq.n	8001306 <__sflush_r+0x1a>
 8001372:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001376:	4299      	cmp	r1, r3
 8001378:	d002      	beq.n	8001380 <__sflush_r+0x94>
 800137a:	4628      	mov	r0, r5
 800137c:	f7ff fada 	bl	8000934 <_free_r>
 8001380:	2000      	movs	r0, #0
 8001382:	6360      	str	r0, [r4, #52]	; 0x34
 8001384:	e7c0      	b.n	8001308 <__sflush_r+0x1c>
 8001386:	2301      	movs	r3, #1
 8001388:	4628      	mov	r0, r5
 800138a:	47b0      	blx	r6
 800138c:	1c41      	adds	r1, r0, #1
 800138e:	d1c8      	bne.n	8001322 <__sflush_r+0x36>
 8001390:	682b      	ldr	r3, [r5, #0]
 8001392:	2b00      	cmp	r3, #0
 8001394:	d0c5      	beq.n	8001322 <__sflush_r+0x36>
 8001396:	2b1d      	cmp	r3, #29
 8001398:	d001      	beq.n	800139e <__sflush_r+0xb2>
 800139a:	2b16      	cmp	r3, #22
 800139c:	d101      	bne.n	80013a2 <__sflush_r+0xb6>
 800139e:	602f      	str	r7, [r5, #0]
 80013a0:	e7b1      	b.n	8001306 <__sflush_r+0x1a>
 80013a2:	89a3      	ldrh	r3, [r4, #12]
 80013a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013a8:	81a3      	strh	r3, [r4, #12]
 80013aa:	e7ad      	b.n	8001308 <__sflush_r+0x1c>
 80013ac:	690f      	ldr	r7, [r1, #16]
 80013ae:	2f00      	cmp	r7, #0
 80013b0:	d0a9      	beq.n	8001306 <__sflush_r+0x1a>
 80013b2:	0793      	lsls	r3, r2, #30
 80013b4:	680e      	ldr	r6, [r1, #0]
 80013b6:	bf08      	it	eq
 80013b8:	694b      	ldreq	r3, [r1, #20]
 80013ba:	600f      	str	r7, [r1, #0]
 80013bc:	bf18      	it	ne
 80013be:	2300      	movne	r3, #0
 80013c0:	eba6 0807 	sub.w	r8, r6, r7
 80013c4:	608b      	str	r3, [r1, #8]
 80013c6:	f1b8 0f00 	cmp.w	r8, #0
 80013ca:	dd9c      	ble.n	8001306 <__sflush_r+0x1a>
 80013cc:	4643      	mov	r3, r8
 80013ce:	463a      	mov	r2, r7
 80013d0:	6a21      	ldr	r1, [r4, #32]
 80013d2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80013d4:	4628      	mov	r0, r5
 80013d6:	47b0      	blx	r6
 80013d8:	2800      	cmp	r0, #0
 80013da:	dc06      	bgt.n	80013ea <__sflush_r+0xfe>
 80013dc:	89a3      	ldrh	r3, [r4, #12]
 80013de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013e2:	81a3      	strh	r3, [r4, #12]
 80013e4:	f04f 30ff 	mov.w	r0, #4294967295
 80013e8:	e78e      	b.n	8001308 <__sflush_r+0x1c>
 80013ea:	4407      	add	r7, r0
 80013ec:	eba8 0800 	sub.w	r8, r8, r0
 80013f0:	e7e9      	b.n	80013c6 <__sflush_r+0xda>
 80013f2:	bf00      	nop
 80013f4:	20400001 	.word	0x20400001

080013f8 <_fflush_r>:
 80013f8:	b538      	push	{r3, r4, r5, lr}
 80013fa:	690b      	ldr	r3, [r1, #16]
 80013fc:	4605      	mov	r5, r0
 80013fe:	460c      	mov	r4, r1
 8001400:	b1db      	cbz	r3, 800143a <_fflush_r+0x42>
 8001402:	b118      	cbz	r0, 800140c <_fflush_r+0x14>
 8001404:	6983      	ldr	r3, [r0, #24]
 8001406:	b90b      	cbnz	r3, 800140c <_fflush_r+0x14>
 8001408:	f7ff fa02 	bl	8000810 <__sinit>
 800140c:	4b0c      	ldr	r3, [pc, #48]	; (8001440 <_fflush_r+0x48>)
 800140e:	429c      	cmp	r4, r3
 8001410:	d109      	bne.n	8001426 <_fflush_r+0x2e>
 8001412:	686c      	ldr	r4, [r5, #4]
 8001414:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001418:	b17b      	cbz	r3, 800143a <_fflush_r+0x42>
 800141a:	4621      	mov	r1, r4
 800141c:	4628      	mov	r0, r5
 800141e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001422:	f7ff bf63 	b.w	80012ec <__sflush_r>
 8001426:	4b07      	ldr	r3, [pc, #28]	; (8001444 <_fflush_r+0x4c>)
 8001428:	429c      	cmp	r4, r3
 800142a:	d101      	bne.n	8001430 <_fflush_r+0x38>
 800142c:	68ac      	ldr	r4, [r5, #8]
 800142e:	e7f1      	b.n	8001414 <_fflush_r+0x1c>
 8001430:	4b05      	ldr	r3, [pc, #20]	; (8001448 <_fflush_r+0x50>)
 8001432:	429c      	cmp	r4, r3
 8001434:	bf08      	it	eq
 8001436:	68ec      	ldreq	r4, [r5, #12]
 8001438:	e7ec      	b.n	8001414 <_fflush_r+0x1c>
 800143a:	2000      	movs	r0, #0
 800143c:	bd38      	pop	{r3, r4, r5, pc}
 800143e:	bf00      	nop
 8001440:	0800163c 	.word	0x0800163c
 8001444:	0800165c 	.word	0x0800165c
 8001448:	0800161c 	.word	0x0800161c

0800144c <_lseek_r>:
 800144c:	b538      	push	{r3, r4, r5, lr}
 800144e:	4c07      	ldr	r4, [pc, #28]	; (800146c <_lseek_r+0x20>)
 8001450:	4605      	mov	r5, r0
 8001452:	4608      	mov	r0, r1
 8001454:	4611      	mov	r1, r2
 8001456:	2200      	movs	r2, #0
 8001458:	6022      	str	r2, [r4, #0]
 800145a:	461a      	mov	r2, r3
 800145c:	f7ff f8a2 	bl	80005a4 <_lseek>
 8001460:	1c43      	adds	r3, r0, #1
 8001462:	d102      	bne.n	800146a <_lseek_r+0x1e>
 8001464:	6823      	ldr	r3, [r4, #0]
 8001466:	b103      	cbz	r3, 800146a <_lseek_r+0x1e>
 8001468:	602b      	str	r3, [r5, #0]
 800146a:	bd38      	pop	{r3, r4, r5, pc}
 800146c:	200000d4 	.word	0x200000d4

08001470 <__swhatbuf_r>:
 8001470:	b570      	push	{r4, r5, r6, lr}
 8001472:	460e      	mov	r6, r1
 8001474:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001478:	2900      	cmp	r1, #0
 800147a:	b096      	sub	sp, #88	; 0x58
 800147c:	4614      	mov	r4, r2
 800147e:	461d      	mov	r5, r3
 8001480:	da07      	bge.n	8001492 <__swhatbuf_r+0x22>
 8001482:	2300      	movs	r3, #0
 8001484:	602b      	str	r3, [r5, #0]
 8001486:	89b3      	ldrh	r3, [r6, #12]
 8001488:	061a      	lsls	r2, r3, #24
 800148a:	d410      	bmi.n	80014ae <__swhatbuf_r+0x3e>
 800148c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001490:	e00e      	b.n	80014b0 <__swhatbuf_r+0x40>
 8001492:	466a      	mov	r2, sp
 8001494:	f000 f864 	bl	8001560 <_fstat_r>
 8001498:	2800      	cmp	r0, #0
 800149a:	dbf2      	blt.n	8001482 <__swhatbuf_r+0x12>
 800149c:	9a01      	ldr	r2, [sp, #4]
 800149e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80014a2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80014a6:	425a      	negs	r2, r3
 80014a8:	415a      	adcs	r2, r3
 80014aa:	602a      	str	r2, [r5, #0]
 80014ac:	e7ee      	b.n	800148c <__swhatbuf_r+0x1c>
 80014ae:	2340      	movs	r3, #64	; 0x40
 80014b0:	2000      	movs	r0, #0
 80014b2:	6023      	str	r3, [r4, #0]
 80014b4:	b016      	add	sp, #88	; 0x58
 80014b6:	bd70      	pop	{r4, r5, r6, pc}

080014b8 <__smakebuf_r>:
 80014b8:	898b      	ldrh	r3, [r1, #12]
 80014ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80014bc:	079d      	lsls	r5, r3, #30
 80014be:	4606      	mov	r6, r0
 80014c0:	460c      	mov	r4, r1
 80014c2:	d507      	bpl.n	80014d4 <__smakebuf_r+0x1c>
 80014c4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80014c8:	6023      	str	r3, [r4, #0]
 80014ca:	6123      	str	r3, [r4, #16]
 80014cc:	2301      	movs	r3, #1
 80014ce:	6163      	str	r3, [r4, #20]
 80014d0:	b002      	add	sp, #8
 80014d2:	bd70      	pop	{r4, r5, r6, pc}
 80014d4:	ab01      	add	r3, sp, #4
 80014d6:	466a      	mov	r2, sp
 80014d8:	f7ff ffca 	bl	8001470 <__swhatbuf_r>
 80014dc:	9900      	ldr	r1, [sp, #0]
 80014de:	4605      	mov	r5, r0
 80014e0:	4630      	mov	r0, r6
 80014e2:	f7ff fa75 	bl	80009d0 <_malloc_r>
 80014e6:	b948      	cbnz	r0, 80014fc <__smakebuf_r+0x44>
 80014e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014ec:	059a      	lsls	r2, r3, #22
 80014ee:	d4ef      	bmi.n	80014d0 <__smakebuf_r+0x18>
 80014f0:	f023 0303 	bic.w	r3, r3, #3
 80014f4:	f043 0302 	orr.w	r3, r3, #2
 80014f8:	81a3      	strh	r3, [r4, #12]
 80014fa:	e7e3      	b.n	80014c4 <__smakebuf_r+0xc>
 80014fc:	4b0d      	ldr	r3, [pc, #52]	; (8001534 <__smakebuf_r+0x7c>)
 80014fe:	62b3      	str	r3, [r6, #40]	; 0x28
 8001500:	89a3      	ldrh	r3, [r4, #12]
 8001502:	6020      	str	r0, [r4, #0]
 8001504:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001508:	81a3      	strh	r3, [r4, #12]
 800150a:	9b00      	ldr	r3, [sp, #0]
 800150c:	6163      	str	r3, [r4, #20]
 800150e:	9b01      	ldr	r3, [sp, #4]
 8001510:	6120      	str	r0, [r4, #16]
 8001512:	b15b      	cbz	r3, 800152c <__smakebuf_r+0x74>
 8001514:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001518:	4630      	mov	r0, r6
 800151a:	f000 f833 	bl	8001584 <_isatty_r>
 800151e:	b128      	cbz	r0, 800152c <__smakebuf_r+0x74>
 8001520:	89a3      	ldrh	r3, [r4, #12]
 8001522:	f023 0303 	bic.w	r3, r3, #3
 8001526:	f043 0301 	orr.w	r3, r3, #1
 800152a:	81a3      	strh	r3, [r4, #12]
 800152c:	89a3      	ldrh	r3, [r4, #12]
 800152e:	431d      	orrs	r5, r3
 8001530:	81a5      	strh	r5, [r4, #12]
 8001532:	e7cd      	b.n	80014d0 <__smakebuf_r+0x18>
 8001534:	080007d9 	.word	0x080007d9

08001538 <__malloc_lock>:
 8001538:	4770      	bx	lr

0800153a <__malloc_unlock>:
 800153a:	4770      	bx	lr

0800153c <_read_r>:
 800153c:	b538      	push	{r3, r4, r5, lr}
 800153e:	4c07      	ldr	r4, [pc, #28]	; (800155c <_read_r+0x20>)
 8001540:	4605      	mov	r5, r0
 8001542:	4608      	mov	r0, r1
 8001544:	4611      	mov	r1, r2
 8001546:	2200      	movs	r2, #0
 8001548:	6022      	str	r2, [r4, #0]
 800154a:	461a      	mov	r2, r3
 800154c:	f7fe ffca 	bl	80004e4 <_read>
 8001550:	1c43      	adds	r3, r0, #1
 8001552:	d102      	bne.n	800155a <_read_r+0x1e>
 8001554:	6823      	ldr	r3, [r4, #0]
 8001556:	b103      	cbz	r3, 800155a <_read_r+0x1e>
 8001558:	602b      	str	r3, [r5, #0]
 800155a:	bd38      	pop	{r3, r4, r5, pc}
 800155c:	200000d4 	.word	0x200000d4

08001560 <_fstat_r>:
 8001560:	b538      	push	{r3, r4, r5, lr}
 8001562:	4c07      	ldr	r4, [pc, #28]	; (8001580 <_fstat_r+0x20>)
 8001564:	2300      	movs	r3, #0
 8001566:	4605      	mov	r5, r0
 8001568:	4608      	mov	r0, r1
 800156a:	4611      	mov	r1, r2
 800156c:	6023      	str	r3, [r4, #0]
 800156e:	f7fe fffe 	bl	800056e <_fstat>
 8001572:	1c43      	adds	r3, r0, #1
 8001574:	d102      	bne.n	800157c <_fstat_r+0x1c>
 8001576:	6823      	ldr	r3, [r4, #0]
 8001578:	b103      	cbz	r3, 800157c <_fstat_r+0x1c>
 800157a:	602b      	str	r3, [r5, #0]
 800157c:	bd38      	pop	{r3, r4, r5, pc}
 800157e:	bf00      	nop
 8001580:	200000d4 	.word	0x200000d4

08001584 <_isatty_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4c06      	ldr	r4, [pc, #24]	; (80015a0 <_isatty_r+0x1c>)
 8001588:	2300      	movs	r3, #0
 800158a:	4605      	mov	r5, r0
 800158c:	4608      	mov	r0, r1
 800158e:	6023      	str	r3, [r4, #0]
 8001590:	f7fe fffd 	bl	800058e <_isatty>
 8001594:	1c43      	adds	r3, r0, #1
 8001596:	d102      	bne.n	800159e <_isatty_r+0x1a>
 8001598:	6823      	ldr	r3, [r4, #0]
 800159a:	b103      	cbz	r3, 800159e <_isatty_r+0x1a>
 800159c:	602b      	str	r3, [r5, #0]
 800159e:	bd38      	pop	{r3, r4, r5, pc}
 80015a0:	200000d4 	.word	0x200000d4

080015a4 <_init>:
 80015a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015a6:	bf00      	nop
 80015a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015aa:	bc08      	pop	{r3}
 80015ac:	469e      	mov	lr, r3
 80015ae:	4770      	bx	lr

080015b0 <_fini>:
 80015b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015b2:	bf00      	nop
 80015b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015b6:	bc08      	pop	{r3}
 80015b8:	469e      	mov	lr, r3
 80015ba:	4770      	bx	lr
