/*
 * STM32F407xx_USART_UART_Driver.c
 *
 *  Created on: Sep 16, 2020
 *      Author: Donavan Tran
 */

#include "../drivers/Inc/stm32f407xx.h"
/*
 * Peripheral clock control
 */
void USART_PeriClkCtrl(USART_Reg_t* pUSARTx, uint8_t EnOrDi) {
	if (EnOrDi) {
		USARTx_PCLK_EN(pUSARTx); //Go to I2Cx_PCLK_EN macro for more details
	} else {
		USARTx_PCLK_DI(pUSARTx); //Go to I2Cx_PCLK_DI macro for more details
	}
}

/*
 * USART initialization and de-initialization
 * Parameter: Pointer to the USART Handle Structure
 */
void USART_Init(USART_Handle_t* pUSARTHandler) {

}

/* Consult the RCC Peripheral reset registers for more details*/
void USART_DeInit(USART_Reg_t* pUSARTx) {
	if (pUSARTx == USART1) {
		USART1_PCLK_RST();
	} else if (pUSARTx == USART2) {
		USART2_PCLK_RST();
	} else if (pUSARTx == USART3) {
		USART3_PCLK_RST();
	} else if (pUSARTx == UART4) {
		UART4_PCLK_RST();
	} else if (pUSARTx == UART5) {
		UART5_PCLK_RST();
	} else {
		USART6_PCLK_RST();
	}
}

/*
 * Enable the USART/UART peripherals
 */
void USART_PeripheralEnable(USART_Reg_t* pUSARTx, uint8_t EnOrDi) {
	if (EnOrDi) {
		pUSARTx->CR1 |= 1 << USART_CR1_UE;
	} else {
		pUSARTx->CR1 &= ~(1 << USART_CR1_UE);
	}
}


/*
 * USART Interrupt Configuration and Handling
 */
void USART_IRQITConfig(uint8_t IRQNumber, uint8_t EnOrDi) {

}

void USART_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriorityValue) {

}

uint8_t USART_CheckStatusFlag(__vo uint32_t* statusReg, uint16_t flag) {

}
