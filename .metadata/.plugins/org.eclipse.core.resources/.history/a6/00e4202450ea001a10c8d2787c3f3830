/*
 * 006TestSpi.c
 *
 *  Created on: Aug 28, 2020
 *      Author: Donavan Tran
 *      Description: Test the SPI_SendData PI to send the string "Hello World"
 *      			 and use the below configurations
 *      			 1. SPI-2 Master Mode
 *      			 2. SCLK = max possible
 *      			 3. DFF = 0 and DFF = 1
 */

/*
 * PB14 -> MISO
 * PB15 -> MOSI
 * PB13 -> SCK
 * PB12 -> NSS
 */
#include "../drivers/Inc/stm32f407xx.h"

void SPI_Handler_Setup(SPI_Handle_t* SPI_Handler);
void GPIO_Handler_Setup(GPIO_Handle_t* GPIO_Handler);

int main() {

	//SPI configuration and GPIO pin configuration
	SPI_Handle_t SPI_Handler;
	GPIO_Handle_t GPIO_Handler;
	memset(&SPI_Handler, 0, sizeof(SPI_Handler));
	memset(&GPIO_Handler, 0, sizeof(GPIO_Handler));

	SPI_Handler_Setup(&SPI_Handler);
	GPIO_Handler_Setup(&GPIO_Handler);

	char* str = "Hello World";
	SPI_SendData(SPI_Handler.pSPIx, (uint8_t*) str, sizeof(str));

	while (1);
	return 0;
}

void SPI_Handler_Setup(SPI_Handle_t* SPI_Handler) {
	SPI_Handler->pSPIx = SPI2;
	SPI_Handler->SPI_Config.DeviceMode = SPI_DEVICE_MASTER_MODE;
	SPI_Handler->SPI_Config.SclkSpeed = SPI_SCLK_SPEED_DIV2; //8MHz since we're using 16MHz HSI
	SPI_Handler->SPI_Config.DFF = SPI_DFF_8_BIT;
}

void GPIO_Handler_Setup(GPIO_Handle_t* GPIO_Handler) {

	//Enable the GPIO clock port D
	GPIO_Handler->pGPIOx = GPIOB;
	GPIO_PeriClkCtrl(GPIO_Handler->pGPIOx, ENABLE);

	GPIO_Handler->GPIOx_PinConfig.GPIO_PinNumber = GPIO_PIN_13 | GPIO_PIN_15;
	GPIO_Handler->GPIOx_PinConfig.GPIO_PinMode = GPIO_ALT_FUNC_MODE;
	GPIO_Handler->GPIOx_PinConfig.GPIO_PinAltFuncMode = AF5;
	GPIO_Handler->GPIOx_PinConfig.GPIO_PinOPType = GPIO_PUSH_PULL;
	GPIO_Handler->GPIOx_PinConfig.GPIO_PinPuPdCtrl = GPIO_NO_PU_PD;


}
